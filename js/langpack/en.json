{
	"token": {
		"lang_english": " ",
		"lang_spanish": "&#127474;&#127485; Cambiar a Español",
		"bioName": "Jesus Casillas.",
		"bioSchool": " UPIICSA '",
		"bioYear": "16",
		"bioCareer": "Master's degree in Computer Science",
		"bioCareer0": "Bachelor's degree in Computer Science",
		"bioContact": "contact",
		"nav_rex": "<img src=images/sw-rex-emoji.png width=20px> Rex Reconciliations",
		"nav_dpf": "<img src=images/sw-dpf-emoji.png width=20px> DPF Processing",
		"nav_pay": "<img src=images/sw-pay-emoji.png width=20px> Payment Terminal",
		"nav_caj": "<img src=images/sw-caj-emoji.png width=20px> Cash Register",
		"nav_mex": "<img src=images/sw-mex-emoji.png width=20px> Mexico Maps",
		"nav_par": "<img src=images/sw-par-emoji.png width=20px> iOS Parachute App",
		"nav_rol": "<img src=images/sw-rol-emoji.png width=20px> iOS Roller Coaster App",
		"nav_jkd": "<img src=images/sw-jkd-emoji.png width=20px> JesusCaDev.com",
		"head_about": "About",
		"head_tech_skills": "Technical Skills",
		"head_pers_skills": "Personal Skills",
		"head_education": "Education",
		"head_work_exp": "Work Experience",
		"head_sw_projects": "Software Projects",
		"head_theapartment": "The Apartment",
		"head_rex": "<img src=images/sw-rex-emoji.png width=60px> <em>&ldquo;Rex&rdquo;</em> Reconciliation Framework",
		"head_dpf": "<img src=images/sw-dpf-emoji.png width=60px> DPF - Data Processing Framework",
		"head_pay": "<img src=images/sw-pay-emoji.png width=60px> Point of Sale (POS) - Payment Terminal",
		"head_caj": "<img src=images/sw-caj-emoji.png width=60px> Point of Sale (POS) - Cash Register",
		"head_mex": "<img src=images/sw-mex-emoji.png width=60px> Mexico Maps",
		"head_par": "<img src=images/sw-par-emoji.png width=60px> iOS App code name <em>&ldquo;Parachute&rdquo;</em>",
		"head_rol": "<img src=images/sw-rol-emoji.png width=60px> iOS App code name <em>&ldquo;Roller Coaster&rdquo;</em>",
		"head_jkd": "<img src=images/sw-jkd-emoji.png width=60px> JesusCaDev.com",
		"about_short_01": "Software engineer with a strong background in enterprise-class client-server development in Java, C#, C++ and Visual Basic. Hardware development in C++, C and Assembly. Web development in Java, JavaScript and HTML/CSS.",
		"about_short_02": "Fast learner open to all technologies, platforms, and languages, because different tools are best suited to different tasks.",
		"about_long_01": "I was going to be a building architect.",
		"about_long_02": "I finished high school with a technical career in construction, which is the common prelude to study architecture. But shortly before choosing a career in college, I learned about Computer Science, and then I knew that I no longer wanted to be a building architect.",
		"about_long_03": "In fact, I really liked studying the technical career in construction, and I would have enjoyed continuing to study building architecture anyway. I remember that my two favorite lectures were technical drawing and house scale models making.",
		"about_long_04": "And later, when I studied Computer Science, my favorite lectures had to do with software analysis and design (which would be the equivalent of technical drawing in building architecture), and with programming languages (similar to what represents the making of house scale models and the pleasure of seeing finally built what I previously designed on paper).",
		"about_long_05": "It was the best decision, because somehow I still became an architect, but instead of a building architect, now I'm a software arquitect.",
		"edu_master": "<br><strong>3.8 GPA</strong> (96 out of 100). Graduated with honors.<br>Thesis: <em>&ldquo;Data Processing Framework&rdquo;</em>.<br><br>",
		"edu_diploma": "Diploma",
		"edu_thesis_doc": "Thesis <br />Document",
		"edu_license": "Professional <br />License",
		"edu_degree": "Degree Exam <br />Certificate",
		"edu_certificate": "Certificate",
		"edu_bachelor": "<br>Thesis: <em>&ldquo;Methodology for Project Management and Systems Development&rdquo;</em>.<br><br>",
		"work_exp_sl_summary": "Java Software Engineer.",
		"work_exp_sl_01": "Java development.",
		"work_exp_pd_summary": "Project lead, development and certification of POS applications.",
		"work_exp_pd_01": "Developed and obtained certifications for <em>&ldquo;Retail&rdquo;</em> and <em>&ldquo;Restaurant&rdquo;</em> C++ applications, from PROSA and Bancomer, giving a boost to sales of Sagem Monetel POS equipment (Sagem Monetel EFT930, EFT930G, EFT930S &amp; EFTsmart terminals) in Mexico.",
		"work_exp_pd_02": "Developed and obtained certifications for <em>&ldquo;PointPayTMS&rdquo;</em> and <em>&ldquo;PointPayTC&rdquo;</em> C++/Assembly systems for initialization and notification of terminals via modem in PROSA.",
		"work_exp_pd_03": "Developed and obtained certifications for <em>&ldquo;PointPayTMS&rdquo;</em>, <em>&ldquo;PointPayTMS &ndash; Multimerchant&rdquo;</em> and <em>&ldquo;PointPayTMS &ndash; TeleCarga Sin Asistencia&rdquo;</em> C++/Assembly systems for initialization and notification of terminals via modem in Bancomer.",
		"work_exp_cs_summary": "First line development and support for Front Office IT (trading) across Fixed Income and Equity Derivatives products. Development in <em>&ldquo;Rex&rdquo;</em> (Reconciliation Framework), EMG Jane, ADAPT, X-Ray and OPICS to implement new requirements and improvements. Responsibility for the software architecture and engineering of new solutions focused to deliver new business initiatives in Mexico. Getting involved into development specific tasks, such as: user requirements, logical and technical analysis, coding, implementation, deployment, and support.",
		"work_exp_cs_01": "Designed and developed <em>&ldquo;Rex&rdquo;</em> (Reconciliation Framework), an in-house configuration driven C# application for delivering Front-to-Back trade reconciliations quickly, increasing new business implementation agility. In Mexico branch, <em>&ldquo;Rex&rdquo;</em> replaced Intellimatch (a costly third-party tool) which led to yearly savings of CHF 50K. <em>&ldquo;Rex&rdquo;</em> also was used for decommissioning tactical tools/spreadsheets and building other data processing applications (not only reconciliations).",
		"work_exp_cs_02": "Designed and developed <em>&ldquo;Intraday LCR&rdquo;</em>, an in-house configuration driven C# application to generate real time reports of the Liquidity Coverage Ratio (LCR) for Credit Suisse Mexico branch. LCR refers to the proportion of highly liquid assets held by financial institutions, to ensure their ongoing ability to meet short-term obligations. This ratio is a regulatory stress test required by Mexico Central Bank (Banco de Mexico). The importance of this project is that the regulatory authorities only require to maintain a calculation of the LCR with two days of lag, but with this project I managed to obtain intraday data through interfaces with back-office systems, front-office and even systems of third parties, thus obtaining calculations in real time. No other investment bank in Mexico has a tool like this, which gives Credit Suisse a competitive advantage by being able to make immediate decisions to stabilize the value of the LCR.",
		"work_exp_cs_03": "Developed <em>&ldquo;MuFu&rdquo;</em> (VB.NET), the Private Banking Mutual Funds system. The system was certified by the authorities and in 2009, Credit Suisse was able to kick-off its Private Banking franchise to start operations in Mexico.",
		"work_exp_cs_04": "I was a key participant of the iDesktop migration project, focused in the analysis, conversion, validation and deployment of spreadsheet tools for New York and Mexico. I made a collaborative work with IT teams of New York, AsiaPac, and Mexico to accomplish the iDesktop goals. As part of the effort, I achieved the elimination of legacy spreadsheets in New York and Mexico after migrating them to a strategic solution implemented in the ADAPT Framework. I was part of the team that developed a non-deliverable currencies swaps payment booker in ADAPT Framework (C#) for middle office that resulted in the decommissioning of five spreadsheets in NY. The consistent use of the <em>&ldquo;Getting Things Done (GTD)&rdquo;</em> methodology took me to be recognized by the EMG IT Management Director, Joshua Rosenblatt, due to my exceedingly good results in the iDesktop project.",
		"work_exp_cs_05": "I achieved the decommission of the Polaris rec tool, providing external support to the OPICS IT team with the development of a solution that generated the data from OPICS required by the Intellimatch tool. I also supported the OPICS migration effort by providing all the analysis and providing the test units from the EMG Jane system.",
		"work_exp_cs_06": "I participated in the Strategic Derivatives Infrastructure Initiative (SDII) migrating Mexico books to EMG Jane (the Risk Management System for Front Office). I led a small team to develop the Mexico custom interface processes to external systems (DRD, OPICS, Arango), required for internal areas and regulatory entities, like Mexico Central Bank. Delivered 7 spreadsheet migrations to address control and operational risk issues in the bank’s derivatives trading and risk-management infrastructure. Generating savings of around MXN $170K a year.",
		"work_exp_cs_07": "Based on my strong background in software engineering, I was chosen to be part of the team rolling out X-Ray to the trading desk in Mexico. X-Ray has become the standard de facto for curve marking and publishing, the applications developed in the X-Ray framework allows traders to see real time broker quotes, calculate mid values, override them if needed and publish the quotes all from one application. It also have audit trails for all changes, providing transparency and a more robust control. I implemented X-Ray for all data required in DMCF curve construction for MXN and UDI currencies.",
		"work_exp_cs_08": "I developed and, for 4 years, I owned the CDS Curve Sync, a C++ tool to synchronize CREDIT_DEFSPREAD into MDS (Market Data System) through CDS_SPREAD and CDS_RECOVERY JMS (Java Message Service) messages. This tool served trading desks of New York, London and AsiaPac, until it was decommissioned and replaced by the Marking Tool.",
		"work_exp_pp_summary": "Project lead, development and certification of POS applications.",
		"work_exp_pp_01": "Developed and obtained certifications for <em>&ldquo;Retail&rdquo;</em> and <em>&ldquo;Restaurant&rdquo;</em> C++ applications, from PROSA and Bancomer, giving a boost to sales of Sagem Monetel POS equipment (Sagem Monetel EFT930, EFT930G, EFT930S &amp; EFTsmart terminals) in Mexico.",
		"work_exp_pp_02": "Developed and obtained certifications for <em>&ldquo;PointPayTMS&rdquo;</em> and <em>&ldquo;PointPayTC&rdquo;</em> C++/Assembly systems for initialization and notification of terminals via modem in PROSA.",
		"work_exp_pp_03": "Developed and obtained certifications for <em>&ldquo;PointPayTMS&rdquo;</em>, <em>&ldquo;PointPayTMS &ndash; Multimerchant&rdquo;</em> and <em>&ldquo;PointPayTMS &ndash; TeleCarga Sin Asistencia&rdquo;</em> C++/Assembly systems for initialization and notification of terminals via modem in Bancomer.",
		"work_exp_ba_summary": "Project lead, development and owner of Account’s Opening module in the &ldquo;Attracting New Customers&rdquo; IT division.",
		"work_exp_ba_01": "Managed and deployed the entire C# project <em>&ldquo;New Front System for Bank Account's Opening&rdquo;</em> for México, Panamá and Guatemala. Helping to open new bank offices in those countries.",
		"work_exp_ba_02": "Developed C# projects <em>&ldquo;Accounts Opening&rdquo;</em>, <em>&ldquo;Account History Enquiries&rdquo;</em>, and <em>&ldquo;Balance Enquiries&rdquo;</em> for México, Panamá y Guatemala.",
		"work_exp_ba_03": "Developed and released the first version of the <em>&ldquo;Accounts Opening&rdquo;</em> project for the product <em>&ldquo;Guardadito Procampo&rdquo;</em> in all branches in Mexico.",
		"work_exp_pt_summary": "Project lead, development and certification of POS applications.",
		"work_exp_pt_01": "Developed <em>&ldquo;Ethernet&rdquo;</em> and <em>&ldquo;Hotel&rdquo;</em> C++ projects for VisaNet Guatemala.",
		"work_exp_pt_02": "Developed <em>&ldquo;Retail&rdquo;</em> and <em>&ldquo;Restaurant&rdquo;</em> C++/Assembly applications for Cybernet Jade &amp; JadeAIRE POS terminals (eAppliance and CyberSoft). Obtained both technical and operative certifications from Promoción y Operación S.A. (PROSA).",
		"work_exp_pt_03": "Developed <em>&ldquo;PointTeleCarga&rdquo;</em> and <em>&ldquo;LatinPoint&rdquo;</em> C++/Assembly systems for initialization and notification of terminals via modem in PROSA.",
		"work_exp_ag_summary": "Development and analysis of an insurance Data Warehouse and a Restaurant application.",
		"work_exp_ag_01": "Developed <em>&ldquo;Estadísticas Vida&rdquo;</em>, a SQL Server Data Warehouse for statistical exploitation integrating details of the insurance contracts from various sources in <u>Seguros Bancomer</u>.",
		"work_exp_ag_02": "Analysis and development of <em>&ldquo;Sistema de Mantenimiento y Almacenamiento (SIMA)&rdquo;</em>, a logistics system made in Visual Basic to control the generation of shipping orders, unit assignment, billing and travel tracking for the fleet of trailers in <u>TUM - Transportistas Unidos Mexicanos</u>.",
		"work_exp_ag_03": "Analysis and development of <em>&ldquo;CuentaChiles&rdquo;</em>, a restaurant system made in Visual Basic to keep track of orders, inventories of raw materials, food recipes and costs per dish at the <u>Grupo Anderson’s (Señor Frog's)</u>.",
		"work_exp_io_summary": "Development and analysis of administrative systems.",
		"work_exp_io_01": "Developed <em>&ldquo;Sistema Integral de Cobranza y Registro Escolar&rdquo;</em>, an administrative system made in Visual Basic to keep a control of tuition payments and a school control of students at the <u>Colegio Indoamericano</u>.",
		"work_exp_3s_summary": "Development and analysis of administrative systems.",
		"work_exp_3s_01": "Developed <em>&ldquo;Administración de Certificaciones&rdquo;</em>, an administrative system made in Visual Basic for the registration and issuance of certifications for maritime education courses at the <u>Instituto de Educación Náutica y Portuaria</u>.",
		"work_exp_se_summary": "Development and analysis of financial systems.",
		"work_exp_se_01": "Analysis and development of the <em>&ldquo;Sistema de Información Financiera (SIF)&rdquo;</em>, a financial system made in Visual Basic to control cash flow, generate reports of collections and payments, budget graphs and query banking operations in the <u>Afore Bancomer</u>.",
		"work_exp_bc_summary": "Development of financial systems.",
		"work_exp_bc_01": "Development of the <em>&ldquo;Sistema de Administración de Riesgos&rdquo;</em>, a financial system made in Visual Basic to identify, quantify and report daily the exposure to risk in the operations of the brokerage house <u>GBM - Grupo Bursátil Mexicano</u>.",
		"work_exp_id_summary": "Development of insurance systems.",
		"work_exp_id_01": "Development of <em>&ldquo;Autos&rdquo;</em>, an insurance system made in Natural Adabas language to capture rate tables, policy issuance and endorsement reports in <u>GNP - Grupo Nacional Provincial</u>.",
		"work_exp_si_summary": "Development and analysis of Point of Sale (POS) and cash register software.",
		"work_exp_si_01": "Analysis and development of <em>&ldquo;PV-SinCo&rdquo;</em>, a C/C++/Assembly Retail POS software for NCR 7445 Retail POS Workstation.",
		"work_exp_si_02": "Analysis and development of <em>&ldquo;PVC-SinCo&rdquo;</em>, a C/C++/Assembly remote consolidator system for receiving reports and sending configuration via modem between central office and stores.",
		"work_exp_si_03": "Analysis and development of <em>&ldquo;SinCo Inventarios&rdquo;</em>, a C++ system for multi-warehouse and multi-company inventory control.",
		"sw_rex_ov_01": "Designed and implemented a C# configuration-driven framework to automate reconciliation processes. I used <em>Reflection</em> in C# to dynamically create instances of existing object types from a XML configuration, and invoke its methods or access its fields and properties.",
		"sw_rex_mt_01": "The main objective of the <em>&ldquo;Rex&rdquo;</em> project was the design and implementation of a Reconciliation Framework that was capable of solving needs and problems inherent to the Investment Banking areas in Credit Suisse Mexico, where it was successfully implemented. In practice, the greatest achievement for <em>&ldquo;Rex&rdquo;</em> has been to have completely replaced Intellimatch: an existing system of reconciliations made by third parties, and that in addition to being expensive, always offered excessively long development times.",
		"sw_rex_mt_02": "This occurred in the Financial Products Control Area. A peculiarity of this area is that during a normal day of operation, most of its functions are focused on maintaining constant vigilance between the specific operations of Purchases and Sales by the Traders of the Front Office, and the Payments and Collections operations of the Back Office.",
		"sw_rex_mt_03": "In order to fulfill its functions of monitoring the accuracy of the operations generated in both areas, reconciliation tools are required between the data from both the Front Office systems and those of the Back Office; at the time, those reconciliation tools were the responsibility of Intellimatch.",
		"sw_rex_mt_04": "It was then that an event occurred that served as a trigger for management to authorize the development of <em>&ldquo;Rex&rdquo;</em>. It all started when the Front Office expressed its interest in starting to offer a new product to its clients, called <em>Swaptions</em>.",
		"sw_rex_mt_05": "Every time the Front Office requests the development of a new financial product, there are a whole series of modifications to the existing systems in order for them to be able to carry out both its valuations, as well as correct accounting and reporting of profits and losses to regulatory entities such as the Mexico Central Bank.",
		"sw_rex_mt_06": "One of the most important modifications has to do with enabling the Financial Products Control Area to carry out reconciliations of operations using the new product. Thus it was that this area asked Intellimatch to make an analysis of the time required for them to develop the reconciliation of the Swaptions. The preliminary estimate provided by Intellimatch was 10 months of development.",
		"sw_rex_mt_07": "Several areas expressed their initial rejection of the Intellimatch proposal, as it was almost a year of waiting before the Front Office could begin to offer the product to its customers, but without a reconciliation in the process of development, the green light could not be given to the other areas to implement the product in its entirety.",
		"sw_rex_mt_08": "Seeing then the opportunity to offer a better option, I submitted a rival estimate to carry out internal development, which decreased the estimated time from 10 to 6 months, for a similar price. Of those 6 months of development, the first 4 months would be dedicated exclusively to building the core of <em>&ldquo;Rex&rdquo;</em>. That is, the development of the configuration, readers, processors and publishers.",
		"sw_rex_mt_09": "What made the difference and meant the success in accepting the new proposal was that the remaining 2 months in development time would be dedicated not only to setting up and implementing reconciliation for Swaptions, but also as part of the same proposal it included the development and migration of the other 19 products that were already being reconciled by Intellimatch, among them: Bonds, Capsfloors, Depos, Equity Options, FX, FX Forwards, Loans, Repos, Swaps, etc.",
		"sw_rex_mt_10": "This meant that in just one fifth of the time required for Intellimatch to develop just 1 product, <em>&ldquo;Rex&rdquo;</em> was able to achieve full development and migration for 20 products.",
		"sw_rex_mt_11": "In this way, it was not only guaranteed that it would be possible to offer clients operations with Swapciones in a shorter time, improving the possibilities of growing the business quickly. In addition, it also completely eliminated the need to continue paying for Intellimatch's annual license of several thousand dollars, and allowed it to be replaced by internal development, much cheaper in terms of development and support.",
		"sw_rex_mt_12": "This demonstrated the resounding success of the original idea put into practice and served to expand the interest in using <em>&ldquo;Rex&rdquo;</em> in other types of developments such as the elimination of spreadsheet-based tactical tools, in addition to the development of other data processing applications (not just reconciliations), such as data migration and validation tools.",
		"sw_rex_ex_01": "This is the first draft I made for Rex's UML model. From the beginning I envisioned a design based on interfaces of different types that were implemented by the final objects, which in turn would be instantiated by <em>Reflection</em>:",
		"sw_rex_ex_01_01": "First draft for Rex UML model",
		"sw_rex_ex_02": "The three main interfaces were <code>IDataSource</code>, <code>IDataProcessor</code>, and <code>IDataPublisher</code>; in that order, they were used to implement the data readers, processors, and publishers. The <code>IReconciliator</code> interface was a specialized type of object focused on processing reconciliations, and it made development easier by implementing objects with standardized names and values.",
		"sw_rex_ex_03": "This original design had only one important change afterwards, since I eliminated the <code>IDataFormatter</code> interface, which had the purpose of implementing different formatters for the data outputs, particularly those that would generate reports in Excel. This was no longer necessary as the final requirement could be met simply by creating a custom <em>template</em> in Excel based on a XML schema (.xsd) and dynamically generating it by importing the data from data sources generated in XML format:",
		"sw_rex_ex_03_01": "Process for using XML data in Excel",
		"sw_rex_ex_04": "In the prototype of the first version I incorporated the <em>Factory Method</em> design pattern as a first approach to control the creation of different objects:",
		"sw_rex_ex_04_01": "Implementing the <em>Factory Method</em> design pattern",
		"sw_rex_ex_05": "But on researching more about <em>Reflection</em> I decided that this would be the ultimate approach to the project (replacing the use of the <em>Factory Method</em> design pattern), as it would give us greater benefits by automatically instantiating entire objects based on XML settings.",
		"sw_rex_ex_14": "To manage the XML configurations repository, I used a content management system called OrchardCMS, which also allows managing access controls based on user profiles for each area associated with a specific application.",
		"sw_rex_ex_15": "I implemented data readers from Oracle, SQL Server and Sybase database sources.",
		"sw_rex_ex_16": "I developed the user interface for the generation and monitoring of reconciliations in a tool based on HTML5 called Adapt Framework.",
		"sw_dpf_ov_01": "Designed and implemented a configuration-driven data processing framework in Java. I used <em>Java Architecture for XML Binding (JAXB)</em> to dynamically create instances of existing object types from a XML configuration, and invoke its methods or access its fields and properties.",
		"sw_dpf_mt_01": "The development of this project has been motivated essentially by the experience obtained over more than 25 years in different operational areas of financial institutions such as banks, insurers and pension fund managers (<em>Afores</em>). During all that time, I was coming to the conclusion that all these areas had a common denominator, since in each one of them there was a specific subset of activities that involved daily data migration, conversion and exploitation processes; from sources whose format was as diverse as the way to access them.",
		"sw_dpf_mt_02": "As a general rule, these needs were related to tasks such as validations, reconciliations, reports, among others; And there had always been multiple solutions to them: from manual processing, third-party software, to custom developments (both outsourced and home-made).",
		"sw_dpf_mt_03": "A particular problem occurred in the context of custom developments and was directly related to the source code, since generally there was no standardized consensus regarding the programming language, the coding standards; and in general to the development methodology.",
		"sw_dpf_mt_04": "It was then that I managed to identify the main consequences of this problem, and that if it continued like this, they would put at risk the stability of the area, and the continuity of daily processes:",
		"sw_dpf_mt_04_01": "Undocumented legacy code.",
		"sw_dpf_mt_04_02": "Difficulty to solve errors quickly due to the complexity of the different applications.",
		"sw_dpf_mt_04_03": "Duplication of work by doing different versions of common utility procedures.",
		"sw_dpf_mt_04_04": "Slow development times, having to analyze and design similar applications from scratch.",
		"sw_dpf_mt_05": "This led me to affirm that a standardized and configurable structure for data processing would provide the following benefits for developers in different areas, which would result in greater responsiveness and better quality in IT deliverables:",
		"sw_dpf_mt_05_01": "Ease of working with complex technologies.",
		"sw_dpf_mt_05_02": "Grouping separate objects and components into something more useful.",
		"sw_dpf_mt_05_03": "The development team is forced to implement code in a way that promotes consistent coding, fewer bugs, and more flexible applications.",
		"sw_dpf_mt_05_04": "Anyone can easily test and trace code, even code written by someone else.",
		"sw_dpf_mt_06": "The objective consisted of developing a <em>&ldquo;Data Processing Framework&rdquo;</em> in an object-oriented programming language, whose architecture was based on design patterns, and that its development approach was one controlled by the configuration.",
		"sw_dpf_mt_07": "For the development, the Java programming language was used, applying only the specific design patterns to optimize the different use cases. The configuration of the applications was based on the XML language, implementing the property of code reflection in order to create instances of objects at runtime.",
		"sw_dpf_mt_08": "The basic architecture considered the following class types and their functionalities:",
		"sw_dpf_mt_09": "Module to read the data from its sources",
		"sw_dpf_mt_09_01": "Reads from Comma Separated Text Files (CSV).",
		"sw_dpf_mt_09_02": "Reads from text files by position (TXT).",
		"sw_dpf_mt_09_03": "Reads from queries to databases (SQL).",
		"sw_dpf_mt_09_04": "Reads from XML-formatted text files.",
		"sw_dpf_mt_10": "Module to carry out data processing",
		"sw_dpf_mt_10_01": "Group totalized values ​​based on key values.",
		"sw_dpf_mt_10_02": "Clone the data type and value of a column.",
		"sw_dpf_mt_10_03": "Clone the structure and content of a table.",
		"sw_dpf_mt_10_04": "Compare value columns of a previously reconciled table.",
		"sw_dpf_mt_10_05": "Reconcile differences between key values.",
		"sw_dpf_mt_10_06": "Split columns of a table while preserving key references.",
		"sw_dpf_mt_10_07": "Delete a column in its entirety.",
		"sw_dpf_mt_10_08": "Delete a table in its entirety.",
		"sw_dpf_mt_10_09": "Match columns of data with equivalence values.",
		"sw_dpf_mt_10_10": "Filter values ​​based on specific criteria.",
		"sw_dpf_mt_10_11": "Merge the data from two tables with the same structure into a new table.",
		"sw_dpf_mt_10_12": "Insert a new column specifying its data type and value.",
		"sw_dpf_mt_10_13": "Sort the data in a table based on a set of value columns.",
		"sw_dpf_mt_10_14": "Transform values ​​based on transformation criteria such as format or value.",
		"sw_dpf_mt_10_15": "Join records from two tables whose match occurs in key values.",
		"sw_dpf_mt_11": "Module to publish the already processed information",
		"sw_dpf_mt_11_01": "Publishes to Comma Separated Text Files (CSV).",
		"sw_dpf_mt_11_02": "Publishes to Text files by position (TXT).",
		"sw_dpf_mt_11_03": "Publishes to database updates (SQL).",
		"sw_dpf_mt_11_04": "Publishes to XML-formatted text files.",
		"sw_dpf_mt_12": "Use cases",
		"sw_dpf_mt_12_01": "Migration",
		"sw_dpf_mt_12_02": "Report",
		"sw_dpf_mt_12_03": "Conciliation",
		"sw_dpf_mt_13": "Since the nature of this development was to be a service program, it did not have a graphical interface for a specific operating system. Instead, a command line interface with parameter handling was developed to drive execution.",
		"sw_dpf_mt_14": "Regarding the data loading module, the development was only done for a specific database manager (MySQL), however, it is part of the evolutionary vision of the framework that can be improved with the addition of functionality to the main core without affecting the operation of previous implementations.",
		"sw_dpf_mt_15": "It is important to mention that the original version of the Data Processing Framework was developed in the C# language, based on the language's own Code Reflection methods and with reduced functionality.",
		"sw_dpf_mt_16": "In order to protect the intellectual property of the financial institution where the original development was made, the version of this work had to be re-developed from scratch in the Java language, with a similar design, but extending its scope to other additional types of processing, and most importantly, without using the Code Reflection methods (as they are typical of the C # language), and instead, using the <em>JAXB: Java Architecture for XML Binding</em> methods.",
		"sw_dpf_mt_17": "A good part of the decision to have carried out the development in the Java language from scratch is the possibility that the complete code could also be offered openly for reuse and improvement, as an additional benefit to the community.",
		"sw_dpf_mt_18": "And last but not least, this was the subject of my Thesis for the Master's degree in Computer Science:",
		"sw_dpf_mt_18_01": "The Thesis",
		"sw_dpf_ex_01": "In the design of the object model for a DPF, a hierarchical arrangement is established, with a main class at the top, composed of other derived classes.",
		"sw_dpf_ex_01_01": "DataProcessingFramework UML model",
		"sw_dpf_ex_02": "The object model begins with the main <code>DataProcessingFramework</code> class. There is a compositional relationship between the <code>Parameter</code> and <code>Solution</code> classes with the <code>DataProcessingFramework</code> class, since both are part of it and have dependencies in their respective lifecycles. And there is also a composition relationship between the <code>Reader</code>, <code>Processor</code> and <code>Publisher</code> interfaces with the <code>Solution</code> class, since between the three they define the complete process of a solution.",
		"sw_dpf_ex_03": "The configuration is mainly based on XML files containing all the configuration details (parameters and solutions), and through the use of JAXB technology, the instances of the configured objects are generated at runtime, and the processes that make up the DPF are launched.",
		"sw_dpf_ex_04": "The Java Architecture for XML Binding (JAXB) is the standard Java Application Programming Interface (API) for XML Binding. It is a standard extension of the language included from Java 6 and later.",
		"sw_dpf_ex_05": "The main advantage of using JAXB is that it is no longer necessary to do the development of potentially fragile parsing code for XML. The necessary annotations are simply included in the Java classes themselves that allow linking with the XML configuration.",
		"sw_dpf_ex_06": "JAXB provides a fast and convenient way to link XML schemas to their Java representations, making it easy to incorporate XML processing and data functions into Java applications. As part of this process, JAXB provides methods for unmarshalling XML instance documents into Java content trees.",
		"sw_dpf_ex_07": "This allows JAXB to read an XML document at runtime and convert it to previously developed Java class instances, populating the object model and validating the data to make sure it matches the configuration schema.",
		"sw_dpf_ex_08": "This is the basic schema of an XML structure that can be processed by JAXB for an implementation of the <code>DataProcessingFramework</code> class that contains the <code>name</code> attribute with the value <code>&quot;Data Processing Framework&quot;</code>, the <code>parameters</code> element containing a list of one or more implementations of the <code>Parameter</code> class and the <code>solutions</code> element containing a list of one or more implementations of the <code>Solution</code> class.",
		"sw_dpf_ex_08_01": "DataProcessingFramework XML configuration",
		"sw_dpf_ex_09": "Each <code>&lt;solution&gt;</code> is made up of three sections: <code>&lt;readers&gt;</code>, <code>&lt;processors&gt;</code> and <code>&lt;publishers&gt;</code>. Within each of these sections are grouped one or more definitions of specific functionality classes.",
		"sw_dpf_ex_09_01": "Solutions XML configuration",
		"sw_dpf_ex_10": "A basic example of the DPF functionality could be the processing of a text file with the values placed of a fixed width, that is, without delimiters that identify the separation between values:",
		"sw_dpf_ex_10_01": "Input file with fixed width values",
		"sw_dpf_ex_11": "And with this XML configuration the processing is done by a fixed width file reader, a sort processor, and a delimited file publisher:",
		"sw_dpf_ex_11_01": "XML configuration example for a data conversion use case",
		"sw_dpf_ex_12": "Resulting in the output file already processed:",
		"sw_dpf_ex_12_01": "Sorted output file with delimited values",
		"sw_dpf_ex_13": "An implementation example for a specific functionality is in this UML diagram of the <code>DelimitedTextFilePublisher</code> class, which is responsible for publishing the output file of the previous example:",
		"sw_dpf_ex_13_01": "DelimitedTextFilePublisher UML model",
		"sw_dpf_ex_14": "This is the Java implementation of <code>DelimitedTextFilePublisher</code>. Contains the necessary annotations to use JAXB: <code>@XmlRootElement</code>, <code>@XmlAttribute</code> and <code>@XmlElement</code>:",
		"sw_dpf_ex_14_01": "Java implementation of DelimitedTextFilePublisher",
		"sw_pay_ov_01": "Developed <em>&ldquo;Retail&rdquo;</em> and <em>&ldquo;Restaurant&rdquo;</em> applications in C ++ and Assembly Language, for the Point of Sale terminals of the Cybernet and Sagem Monetel brands. The applications received technical and operational certifications from PROSA and Bancomer.",
		"sw_pay_mt_01": "Between 2001 and 2004 I worked for the Norwegian company Point Transaction Systems de México, and was responsible for the two most important projects at that time, as they were bringing to Mexico for the first time the Point of Sale terminals for payments of the Korean brand Cybernet.",
		"sw_pay_mt_02": "Those two projects consisted of developing the complete applications called <em>&ldquo;Retail&rdquo;</em> and <em>&ldquo;Restaurant&rdquo;</em>, which are basically the two most common use cases in the sales strategies of this type of terminals. In addition, I obtained the technical and operational certifications from the PROSA company for both applications.",
		"sw_pay_mt_03": "PROSA (originally called Promoción y Operación) is a Mexican company founded by 10 banks in August 1969 to launch the <strong>Carnet</strong> credit card. Among them were: Banco de Londres y México (today Banco Santander), Banco Comercial Mexicano (today Scotiabank) and eight other institutions of that time. Given the high sunk costs and investment in technology that required to get a credit card, those ten banks came together in a joint project to have a platform in a syndicated way.",
		"sw_pay_mt_04": "The first bank credit card in Mexico, also identified as the first in all of Latin America, had been launched on January 15, 1968 by the National Bank of Mexico, Banamex (today Citibanamex), then one of the two largest private banks in Mexico. The card was called <em>Bancomático</em>, internationally it was affiliated with the Interbank - Master Charge system (today known as Mastercard).",
		"sw_pay_mt_05": "A year later, Bancomer (today BBVA), another of the largest banks in the country, issued its card in June 1969, affiliated with the Bank of America system, BankAmericard (now known as Visa).",
		"sw_pay_mt_06": "First Banamex, then Bancomer, developed their own systems to operate their cards. This was possible because both banks were computerizing operations in those years, which responded to their large scale in the retail market.",
		"sw_pay_mt_07": "Today the owners of PROSA are Banorte, Scotiabank, Santander, HSBC, Invex, and Banjército. To date, PROSA carries out 3.6 billion transactions per year, which means a turnover of 1.3 billion pesos with plastics that are not only from its partners, but from a large number of non-bank financial intermediaries such as sofomes, sofipos, sapis , savings banks, etc. And together with E-Global de Bancomer and Citibanamex, it is one of the great drivers in Mexico of the use of means of payment.",
		"sw_pay_mt_08": "From 2006 to 2007 I returned to work for the same company, which had changed its name to PointPay International Inc.; and given the experience and achievements that I had previously with the Cybernet terminals, I was once again responsible for the <em>&ldquo;Retail&rdquo;</em> and <em>&ldquo;Restaurant&rdquo;</em> projects, but now for new terminals for the French brand Sagem Monetel that were also about to be introduced to the Mexican market.",
		"sw_pay_mt_09": "And on this occasion, not only did I obtain technical and operational certifications from PROSA for both applications, but now also from Bancomer, the second largest electronic transaction operator in Mexico.",
		"sw_pay_ex_01": "POS is an abbreviation for point of sale, which refers to any place where a transaction can happen, whether it’s for a product or service.",
		"sw_pay_ex_02": "For retailers, that is usually the area around the cash register. In a classic restaurant, where you pay a cashier instead of giving the money to a waitress, that area next to the cash register is also considered the point of sale. And if you have a mobile point of sale terminal, the entire store effectively becomes a point of sale.",
		"sw_pay_ex_03": "The first concept to understand about a POS system is that it consists of point of sale hardware and point of sale software. Together, these two components give merchants all of the tools they need to accept popular payment methods, specifically credit and debit cards.",
		"sw_pay_ex_04": "For the development of the software for the Cybernet terminals, the use of eAppliance was required, which was an emulator of the Cybersoft operating system of the terminal linked to the Turbo C ++ compiler.",
		"sw_pay_ex_05": "Some functions required the use of assembler instructions embedded in the C ++ code, specifically the instructions that I implemented for modem communication from the terminal to the system that I developed to initialize the parameters and base configuration of the terminals before their delivery to the clients.",
		"sw_pay_ex_06": "The development of the software for the Sagem Monetel terminals did not require the use of emulators, since they could be programmed directly by cable and run the programs compiled in Borland C++.",
		"sw_caj_ov_01": "Designed and implemented in C, C++ and Assembly Language a cash register system for the NCR 7445 point of sale workstation.",
		"sw_caj_mt_01": "After finishing the last semester of the Bachelor in Computer Science, I learned that one of the requirements for the degree process was to do professional internships in a company.",
		"sw_caj_mt_02": "I had no idea where to start the search, but luckily I found an ad in the school's IT department, requesting students interested in doing their internships in a software development project.",
		"sw_caj_mt_03": "Thus, at the beginning of 1996 I began my professional internship at the company SinCo - Soluciones, Informática y Comunicaciones.",
		"sw_caj_mt_04": "The company had been founded by Carlos Canales, who worked for the NCR Corporation in Mexico for 20 years, where he held various management positions to eventually become president and CEO of NCR in Colombia. And in 1992 he was the founding President and CEO of the current Apple Computer Mexico.",
		"sw_caj_mt_05": "I was very fortunate that my activities had to do with a great system called <em>&ldquo;Quick Data&rdquo;</em>. It was an integrating information system that could handle large volumes of information and quickly generate queries, reports, and statistics. For three months I got to know the system, I documented a new user manual, and I managed to make some standardization improvements to the code.",
		"sw_caj_mt_06": "At the end of my professional internship, Carlos Canales offered me the opportunity to be hired, so I accepted the offer and got my first job as a programmer analyst.",
		"sw_caj_mt_07": "My first project involved reverse engineering a program that was incomplete and undocumented, which turned out to be the skeleton of a cash register system. The source code in C language was the only thing that a Texas company had given him, whom he had hired a couple of years ago to develop the complete software, but he canceled the contract for not showing progress in so long. Since Canales left NCR, he had the vision of starting an alternative business related to NCR's point of sale terminals, taking advantage of the knowledge and contacts that he still had in the company, and that software was a central part of his strategy.",
		"sw_caj_mt_08": "After six months I was able to complete and get the software up and running and successfully deploying it on the NCR 7445 Falcon Retail POS workstation.",
		"sw_caj_mt_09": "And so it was that we got our first client, La Estrella de Mixcalco, a clothing wholesaler in the center of the city with several branches. They acquired several terminals interested in the software that would help them with their sales flow, and after a few months I managed to stabilize the software and install terminals in several branches.",
		"sw_caj_ex_01": "A cash register point of sale system is mainly focused on registering the prices of a certain amount of products for sale, and issuing a receipt with the total to be paid, in addition to keeping a record of the cash in the cash drawer, among other functionalities.",
		"sw_caj_ex_02": "As part of integrating the software with the hardware, I had to develop assembly language functions to read the barcodes with a gun scanner, to eject the cash drawer, to receive readings from an external scale, and mainly to generate printable code matrices to personalize printed receipts.",
		"sw_caj_ex_03": "The most important part that was missing from the original source code was related to data storage, so I implemented one based on ISAM files (an acronym for Indexed Sequential Access Method), similar to the one used in <em>&ldquo;Quick Data&rdquo;</em>, and that was what explained that its random access times were extremely fast. That allowed me to achieve very fast response times when scanning the barcode and looking at the price from the data files.",
		"sw_caj_ex_04": "Years later, when I had to develop a final project for the Data Warehouse class in the Master's Degree, I did a redesign of the data structure for a cash register software, inspired by those original ISAM files. But now with a relational database model:",
		"sw_caj_ex_04_01": "General entity relationship diagram",
		"sw_caj_ex_04_02": "MySQL entities diagram",
		"sw_caj_ex_05": "When it comes to automated product registration, everything revolves around the <strong>PLU</strong>, which is the abbreviation for <em>Price Look Up</em>, and refers to the codes used in supermarkets to facilitate inventory control and its registration at the cash registers. The entity contains specific values for each item, such as Price, Available Quantity, and Quantity per Price.",
		"sw_caj_ex_05_01": "Originally, it was a 4-digit code.",
		"sw_caj_ex_05_02": "Then when 4 digits were insufficient, then it evolved to 5.",
		"sw_caj_ex_05_03": "But with the advent of laser barcode readers, the use of the standard 16-digit code became standard.",
		"sw_caj_ex_05_04": "In addition to the PLU, there are these other data entities defined in the entity-relationship model:",
		"sw_caj_ex_06": "Level",
		"sw_caj_ex_06_01": "It is the main grouping for entities that keep running totals. It refers to the levels of cash cuts. It is also related to the Operators' shifts.",
		"sw_caj_ex_07": "Group",
		"sw_caj_ex_07_01": "It is the grouping for the Departments. For example, a Group can be defined as <em>&ldquo;Clothes&rdquo;</em>, and can group the Departments defined as: <em>&ldquo;Ladies&rdquo;</em>, <em>&ldquo;Gentlemen&rdquo;</em>, <em>&ldquo;Babies&rdquo;</em>, etc.",
		"sw_caj_ex_08": "Department",
		"sw_caj_ex_08_01": "It is the grouping for PLUs, and it can have values ​​such as <em>&ldquo;Groceries&rdquo;</em>, <em>&ldquo;Dairy&rdquo;</em>, <em>&ldquo;Bakery&rdquo;</em>, etc.",
		"sw_caj_ex_09": "Tax",
		"sw_caj_ex_09_01": "These are the descriptions and rates of the different taxes associated with each PLU.",
		"sw_caj_ex_10": "Payment methods",
		"sw_caj_ex_10_01": "They are the payment methods such as <em>&ldquo;Cash&rdquo;</em>, <em>&ldquo;Checks&rdquo;</em>, <em>&ldquo;Credit Card&rdquo;</em>, <em>&ldquo;Vouchers&rdquo;</em>, etc.",
		"sw_caj_ex_11": "Discount",
		"sw_caj_ex_11_01": "They are the keys to predefined discounts.",
		"sw_caj_ex_12": "Operation",
		"sw_caj_ex_12_01": "It groups together the amounts associated with each Operation carried out by a specific Operator.",
		"sw_caj_ex_13": "Operator",
		"sw_caj_ex_13_01": "It is the user who controls the cash register.",
		"sw_caj_ex_14": "Commission",
		"sw_caj_ex_14_01": "It groups together the amounts related to the commissions of each Operator.",
		"sw_caj_ex_15": "Store",
		"sw_caj_ex_15_01": "Catalog of Stores that contain the Cash Registers.",
		"sw_caj_ex_16": "Totals",
		"sw_caj_ex_16_01": "There are dependent tables that accumulate totals maintaining the grouping by Level, and by another grouping from the independent entities. The tables that accumulate counters and totals are the following:",
		"sw_caj_ex_16_01_01": "Group Totals",
		"sw_caj_ex_16_01_02": "Department Totals",
		"sw_caj_ex_16_01_03": "PLU Totals",
		"sw_caj_ex_16_01_04": "Tax Totals",
		"sw_caj_ex_16_01_05": "Payment Method Totals",
		"sw_caj_ex_16_01_06": "Discount Totals",
		"sw_caj_ex_16_01_07": "Operation Totals",
		"sw_caj_ex_16_01_08": "Operator Totals",
		"sw_caj_ex_16_01_09": "Operator Commissions",
		"sw_caj_ex_16_01_10": "Cash Register Totals",

		"sw_caj_ex_17": "Ticket Information",
		"sw_caj_ex_17_01": "It contains a record for each of the lines to be printed in the header and footer of the ticket, and they are grouped by Cash Register.",
		"sw_caj_ex_18": "Movement",
		"sw_caj_ex_18_01": "It is the detail of each movement made in the cash register, which does not necessarily have to be a sale, but it is necessary to keep a record of the movements in each box, and can be of these types:",
		"sw_caj_ex_18_01_01": "Sale",
		"sw_caj_ex_18_01_02": "Cancellation",
		"sw_caj_ex_18_01_03": "Return",
		"sw_caj_ex_19": "Cash Register Flags",
		"sw_caj_ex_19_01": "It maintains the specific configuration to modify the behavior of each Cash Register. Its use is particularly at the programming level, where the behavior of each specific flag is implemented.",
		"sw_mex_ov_01": "Designed and developed in GW-BASIC a graphic system for selecting and consulting maps of Mexico and its states.",
		"sw_mex_mt_01": "I learned to program for the first time in the GW-BASIC language since the first semester of the Bachelor of Computer Science, during the Introduction to Programming Languages class. And to pass the class, the teacher asked us to prepare a final project with a free topic, programmed in GW-BASIC.",
		"sw_mex_mt_02": "The first idea that came to mind was to create something that had graphics on it, although I wasn't sure yet if that was possible in GW-BASIC. It was 1990, and access to the Internet was only the privilege of a few in some research centers in the country, so it was not easy to find answers quickly as it is today. The only tools I had access to were a Sperry-brand Intel 8088 PC-XT computer (similar to IBM PCs) and some GW-BASIC books in the school library.",
		"sw_mex_mt_03": "My goal was to display a complete view of the map of Mexico and its division by states on the screen. And that by using the arrow keys to be able to navigate between each of the states until selecting one with the Enter key, and that at that moment it will show an enlarged version of the map of that particular state. And finally with the Esc key, return to the original map. Exactly as I have depicted in this simulation that I did recently (the original project worked the same, only a little more pixelated):",
		"sw_mex_ex_01": "When I learned that the main concept of computer graphics had to do with a pixel matrix, I instantly associated it with the millimeter paper that I had used years before to make architectural drawings to scale (a kind of junction between building architecture and software architecture).",
		"sw_mex_ex_01_01": "Knowing that, I made my first test animation with the drawing of a jumping frog that I took from a tissue design:",
		"sw_mex_ex_02": "I copied the drawing to a sheet of millimeter paper, and also created a new additional drawing of a third frog just as it started its jump, to get the complete sequence:",
		"sw_mex_ex_03": "The final version shows (at the bottom) the complete sketch of the jump in a smaller version, and basically the technique I used was simply that the little square (or pixel) where the line passed was lit, and then I filled each one with a ball made in pencil:",
		"sw_mex_ex_04": "I then used the same technique to create the main screen of my system with the complete map of Mexico.:",
		"sw_mex_ex_05": "The main part of the project is when I discovered the use of the <code>PAINT</code> and <code>DRAW</code> statements. I used <code>PAINT</code> to fill each state with color starting from a center point and all the way to its edges, to make the color change animation. And I used <code>DRAW</code> to draw the entire outline of each map on the screen. <code>DRAW</code> used as parameters values based on a Graphics Macro Language (GML), that is, a sequence of instructions to draw. The main instructions are:",
		"sw_mex_ex_05_01": "up",
		"sw_mex_ex_05_02": "down",
		"sw_mex_ex_05_03": "left",
		"sw_mex_ex_05_04": "right",
		"sw_mex_ex_05_05": "diagonally up and right",
		"sw_mex_ex_05_06": "diagonally down and right",
		"sw_mex_ex_05_07": "diagonally down and left",
		"sw_mex_ex_05_08": "diagonally up and left",
		"sw_mex_ex_06": "These are my notes with the entire set of instructions that I generated by hand to draw the complete map of Mexico:",
		"sw_mex_ex_07": "Of course, after seeing all the time and manual work that I expected to do to obtain the instruction sets for the 32 maps of each state, instead I decided to program a tool with which I was generating each text file containing the instructions generated using the arrow keys (like a kind of video game), in such a way that I simply followed the map route with my finger and typed the arrows to trace the complete sequence of instructions in the file.",
		"sw_mex_ex_07_01": "Here is a collage with the 32 additional maps:",
		"sw_mex_ex_08": "Finally there are also special instructions to move position without making lines, or to draw lines between two points:",
		"sw_mex_ex_08_01": "Move absolute or relative. If x is preceded by a + or -, x and y are added to the current graphics position, and connected to the current position by a line. Otherwise, a line is drawn to point x, y from the current position.",
		"sw_mex_ex_08_02": "Move, but plot no points.",
		"sw_mex_ex_08_03": "Move, but return to original position when done.",
		"sw_mex_ex_09": "And these are my notes with all the special instruction sets for each map:",
		"sw_par_ov_01": "I am currently developing in Swift and Objective-C a new iOS app with the code name <em>&ldquo;Parachute&rdquo;</em>, to keep a record of floating events and statistics of occurrences.",
		"sw_par_mt_01": "images/sw-par-screen-01.jpg",
		"images/sw-par-screen-01.jpg": "images/sw-par-screen-01-sp.jpg",
		"50%": "50%",
		"sw_par_ex_01": "?",
		"sw_rol_ov_01": "I am currently developing in Swift and Objective-C a new iOS app with the code name <em>&ldquo;Roller Coaster&rdquo;</em>, to keep track of personal budget through a combination of a monthly calendar view and a cash flow graph.",
		"sw_rol_mt_01": "images/sw-rol-screen-01.jpg",
		"images/sw-rol-screen-01.jpg": "images/sw-rol-screen-01-sp.jpg",
		"sw_rol_ex_01": "?",
		"sw_jkd_ov_01": "Developed this web page in JavaScript, HTML and CSS.",
		"sw_jkd_mt_01": "With this website I want to go beyond the limits of a resume to show the projects that have had a special meaning in my work as a Software Engineer.",
		"sw_jkd_ex_01": "I used Bootstrap to implement the menu sidebar. JavaScript for dynamic text effects. JQuery-Lang-js to implement the multilanguage capability of the site. Highlight.js to format source code listings.",
		"sw_jkd_ex_02": "I took advantage of Keynote animations and used GIF Toaster to create the GIF's of The Apartment. OmniGraffle to update some DPF diagrams. Pixelmator and Paintbrush for Mac to make multiple edits and changes to Maps of Mexico. Craft and Tot for text editing and idea repositories in general.",
		"sw_jkd_ex_03": "I implemented the option that Hostinger.com gives me to release changes to the website via update notifications on GitHub. Thus, I can make a correction or implement a new idea from any iPhone or iPad device using Textastic and Working Copy, release the changes to GitHub and see them reflected almost immediately on my site.",
		"ta_01": "This is a still from the classic film 1960 <em>&ldquo;The Apartment&rdquo;</em>.<br><br>Jack Lemmon plays CC Baxter, a clerk in a large insurance company in New York, and so here you see his office - drones laid out at desks almost as far at the eye can see.",
		"ta_02": "Each desk has a telephone, rolodex, typewriter and a large electro-mechanical calculating machine.<br><br>In some of the other shots you can see the manufacturer - <em>&ldquo;Friden&rdquo;</em>.",
		"ta_03": "In effect, every person on that floor is a cell in a spreadsheet.",
		"ta_04": "The floor is a worksheet",
		"ta_05": "and the building is an Excel file, with thousands of cells each containing a single person.",
		"ta_06": "CC Baxter is on the 19th floor, section W, desk 861.<br> <br>The links between cells are made up of a typewriter, carbon copies (<em>&ldquo;CC&rdquo;</em>) and an internal mail system, and it takes days to refresh whenever someone on the top floor presses F9.",
		"ta_07": "(Shirley MacLaine plays an elevator attendant, so this is actually a romance between a button and a spreadsheet cell.)",
		"ta_08": "When people talk about productivity - about PowerPoint and Excel and how Google Docs and the cloud will or won't kill them, or messaging and the cloud, or how you need a PC for <em>&ldquo;real work&rdquo;</em> - I'm reminded of CC Baxter and his Friden calculating machine.",
		"ta_09": "What killed those machines was not better, cheaper competitors but a completely different way to address the same underlying business need. Instead of hundreds of people recalculating insurance rates, the company bought a mainframe. The business need was being met, but the mechanism changed completely and the old tools disappeared.",
		"ta_10": "This story makes us aware that what we are doing today is not going to be the same in two years. We have to be permanently open to change, the only constant is going to be change. And it is very important that we are fast, not only because we want to get results faster, but because if it takes us three years to do something, the technology will have changed twice already. If we are not agile and work differently, everything we do is going to be two years late."
	}
}
