{
	"token": {
		"lang_english": "&#127482;&#127480; Switch to English",
		"lang_spanish": " ",
		"bioName": "Jesús Casillas.",
		"bioSchool": " UPIICSA ",
		"bioYear": "2016",
		"bioCareer": "Maestría en Ciencias en Informática",
		"bioCareer0": "Licenciatura en Ciencias de la Informática",
		"bioContact": "contacto",
		"Profile": "Perfil",
		"Technical Skills": "Habilidades Técnicas",
		"Personal Skills": "Habilidades Personales",
		"Education": "Estudios",
		"Work Experience": "Experiencia Laboral",
		"Software Projects": "Proyectos de Software",
		"The Apartment": "El Apartamento",
		"JESUS": "JESÚS",
		"Agile": "Desarrollo ágil de software",
		"Building": "Construcción de código",
		"Client-server": "Cliente-servidor",
		"Cloud computing": "Computación en la nube",
		"Code editors": "Editores de código",
		"Content management": "Gestores de contenido",
		"Databases": "Bases de datos",
		"Design": "Diseño",
		"Diagramming": "Diagramación",
		"Experienced": "Experimentado",
		"Familiar": "Conocido",
		"Frameworks": "Estructuras",
		"Hardware drivers": "Controladores de hardware",
		"IDEs": "Entornos de desarrollo integrado",
		"Image edition": "Edición de imágenes",
		"Integration": "Integración",
		"JDK": "Kits de desarrollo Java",
		"Languages": "Lenguajes",
		"Learning resources": "Recursos de aprendizaje",
		"Mobile": "Desarrollo móvil",
		"Paperless office": "Oficina sin papel",
		"Productivity": "Productividad",
		"Professional growth": "Crecimiento profesional",
		"Proficient": "Competente",
		"Text composition": "Composición de textos",
		"Text edition": "Edición de textos",
		"Version control": "Control de versiones",
		"Video edition": "Edición de videos",
		"Web development": "Desarrollo Web",
		"Web tools": "Herramientas Web",
		"Getting Things Done (GTD)": "&ldquo;Organízate con eficacia&rdquo; (<em>GTD: Getting Things Done</em>)",
		"#": "#",
		"#profile_header": "#profile_header",
		"#tech_skills_header": "#tech_skills_header",
		"#pers_skills_header": "#pers_skills_header",
		"#education_header": "#education_header",
		"#work_exp_header": "#work_exp_header",
		"#sw_projects_header": "#sw_projects_header",
		"#sw_rex_header": "#sw_rex_header",
		"#sw_dpf_header": "#sw_dpf_header",
		"#sw_pay_header": "#sw_pay_header",
		"#sw_caj_header": "#sw_caj_header",
		"#sw_acc_header": "#sw_acc_header",
		"#sw_sif_header": "#sw_sif_header",
		"#sw_chi_header": "#sw_chi_header",
		"#sw_par_header": "#sw_par_header",
		"#sw_rol_header": "#sw_rol_header",
		"#sw_mex_header": "#sw_mex_header",
		"#sw_jkd_header": "#sw_jkd_header",
		"#theapartment_header": "#theapartment_header",
		"nav_rex": "<img src=images/sw-rex-emoji.png width=20px> Reconciliaciones Rex",
		"nav_dpf": "<img src=images/sw-dpf-emoji.png width=20px> Procesamiento DPF",
		"nav_pay": "<img src=images/sw-pay-emoji.png width=20px> Terminal de Pagos",
		"nav_caj": "<img src=images/sw-caj-emoji.png width=20px> Caja Registradora",
		"nav_mex": "<img src=images/sw-mex-emoji.png width=20px> Mapas de México",
		"nav_par": "<img src=images/sw-par-emoji.png width=20px> App Paracaídas",
		"nav_rol": "<img src=images/sw-rol-emoji.png width=20px> App Montaña Rusa",
		"nav_jkd": "<img src=images/sw-jkd-emoji.png width=20px> JesusCaDev.com",
		"head_about": "Acerca de",
		"head_tech_skills": "Habilidades Técnicas",
		"head_pers_skills": "Habilidades Personales",
		"head_education": "Estudios",
		"head_work_exp": "Experiencia Laboral",
		"head_sw_projects": "Proyectos de Software",
		"head_theapartment": "El Apartamento",
		"head_rex": "<img src=images/sw-rex-emoji.png width=60px> Estructura para Reconciliaciones <em>&ldquo;Rex&rdquo;</em>",
		"head_dpf": "<img src=images/sw-dpf-emoji.png width=60px> Estructura para el Procesamiento de Datos (<em>DPF - Data Processing Framework</em>)",
		"head_pay": "<img src=images/sw-pay-emoji.png width=60px> Terminal Punto de Venta - Terminal de Pagos",
		"head_caj": "<img src=images/sw-caj-emoji.png width=60px> Terminal Punto de Venta - Caja Registradora",
		"head_mex": "<img src=images/sw-mex-emoji.png width=60px> Mapas de México",
		"head_par": "<img src=images/sw-par-emoji.png width=60px> App Android <em>&ldquo;Paracaídas&rdquo;</em>",
		"head_rol": "<img src=images/sw-rol-emoji.png width=60px> App Android <em>&ldquo;Montaña Rusa&rdquo;</em>",
		"head_jkd": "<img src=images/sw-jkd-emoji.png width=60px> JesusCaDev.com",
		"Some history...": "Algo de historia...",
		"In summary...": "En resumen...",
		"about_short_01": "Ingeniero de software con una sólida experiencia en desarrollos cliente-servidor de clase empresarial en Java, C#, C++ y Visual Basic. Desarrollos web en Java, Java EE, C#, JavaScript y HTML/CSS. Desarrollos hardware en C++, C y Lenguaje Ensamblador.",
		"about_short_02": "De aprendizaje rápido y abierto a todas las tecnologías, plataformas y lenguajes, porque herramientas diferentes se adaptan mejor a tareas diferentes.",
		"about_long_01": "Yo iba a ser arquitecto de edificios.",
		"about_long_02": "Terminé el bachillerato con la carrera técnica en construcción, que es la antesala común para estudiar arquitectura. Pero poco antes de elegir carrera para la universidad, conocí Ciencias en Informática, y entonces supe que ya no quería ser arquitecto de edificios.",
		"about_long_03": "En realidad me gustó mucho estudiar la carrera técnica en construcción, e igual hubiera disfrutado mucho seguir estudiando arquitectura de edificios. Recuerdo que mis dos materias favoritas fueron dibujo técnico y elaboración de maquetas de casas.",
		"about_long_04": "Y más adelante, cuando estudié Ciencias en Informática, mis materias favoritas tuvieron que ver con el análisis y diseño de software (que sería el equivalente al dibujo técnico en la arquitectura de edificios), y con lenguajes de programación (similar a lo que representa la elaboración de maquetas y el placer de ver finalmente construido lo que antes diseñé en papel).",
		"about_long_05": "Aquella fue la mejor decisión, porque de alguna manera todavía me convertí en arquitecto, pero en lugar de arquitecto de edificios, ahora soy arquitecto de software.",
		"edu_master": "<br><strong>Promedio de 9.6</strong>. Graduado con Mención Honorífica.<br>Tesis: &ldquo;Estructura para el Procesamiento de Datos (<em>Data Processing Framework</em>)&rdquo;.<br><br>",
		"edu_diploma": "Título <br />Profesional",
		"edu_thesis_doc": "Documento <br />de la Tesis",
		"edu_license": "Cédula <br />Profesional",
		"edu_degree": "Acta de Examen <br />de Grado",
		"edu_certificate": "Certificado <br />Escolar",
		"edu_bachelor": "<br>Tesis: <em>&ldquo;Metodología para la Administración de Proyectos y Desarrollo de Sistemas&rdquo;</em>.<br><br>",
		"Software Engineer & Analyst": "Ingeniero de Software y Analista",
		"Software Engineer & Project Leader": "Ingeniero de Software y Líder de Proyecto",
		"Senior Analyst": "Analista Superior",
		"Programmer Analyst / Project Leader": "Analista Programador / Líder de Proyecto",
		"Programmer Analyst": "Analista Programador",
		"Software Engineer": "Ingeniero de Software",
		"work_exp_sl_summary": "Líder Técnico e Ingeniero de Software Sénior, desarrollando software SynQ y AutoStore en Java EE para automatización de almacenes.",
		"work_exp_sl_01": "Desarrollé el Software SynQ Sistema de Administración de Almacenes (<em>WMS: Warehouse Management System</em>) en Java EE|WebLogic|SQL Server para el proyecto <em>&ldquo;DHL Starfighter&rdquo;</em> de DHL en Atlanta, Georgia. Instalé desde cero un servidor con el software de AutoStore, e integré con el software SynQ la solución <em>&ldquo;mercancía a persona&rdquo;</em> basada en una disposición que utiliza estanterías cúbicas, contenedores y robots.",
		"work_exp_sl_02": "Desarrollé el Software SynQ Sistema Automático de Almacenamiento y Recuperación de Mercancías (<em>ASRS: Automatic Storage and Retrieval System</em>) en Java EE|WebLogic|Oracle para el proyecto <em>&ldquo;Orange&rdquo;</em> de Grupo Familia en Medellín, Colombia. Implementé la integración de SynQ con los dispositivos de comandos por voz VoCollect de Honeywell con la solución de <em>&ldquo;recolección manual&rdquo;</em> en la zona de Mezzanines.",
		"work_exp_pd_summary": "Liderar proyectos, desarrollo y certificación de aplicaciones Terminal Punto de Venta (<em>POS: Point of Sale</em>).",
		"work_exp_pd_01": "Desarrollé el Software Punto de Venta <em>&ldquo;Retail&rdquo;</em> en C++|HTML|CSS para los Pinpads Verifone P200, P400 y Mx925 de VisaNet Guatemala.",
		"work_exp_pd_02": "Ayudé a VisaNet Guatemala a obtener las certificaciones de Visa y MasterCard para el Pinpad Verifone P200, mediante el uso de las herramientas EMV Test Tools y UL Brand Test Tool.",
		"work_exp_pd_03": "Desarrollé el proyecto <em>&ldquo;Contingencias&rdquo;</em> para el Software Punto de Venta <em>&ldquo;Gasolinera&rdquo;</em> en C para las Terminales Punto de Venta Verifone VX680 de VisaNet Guatemala.",
		"work_exp_pd_04": "Desarrollé el proyecto <em>&ldquo;Dual SIM&rdquo;</em> para el Software Punto de Venta <em>&ldquo;Retail&rdquo;</em> y <em>&ldquo;Restaurant&rdquo;</em> en C para las Terminales Punto de Venta Verifone VX680 y VX675 de VisaNet Guatemala.", 
		"work_exp_cs_summary": "Desarrollo y soporte de primera línea en Tecnologías de la Información de Front Office (<em>trading</em>) en productos de Renta Fija y Derivados de Renta Variable. Desarrollo en <em>&ldquo;Rex&rdquo;</em> (Reconciliation Framework), EMG Jane, ADAPT, X-Ray y OPICS para implementar nuevos requisitos y mejoras. Responsabilidades en la arquitectura e ingeniería de software para nuevas soluciones enfocadas al lanzamiento de nuevas iniciativas comerciales en México. Involucrado con tareas específicas de desarrollo, tales como: requisitos de usuario, análisis lógico y técnico, codificación, implementación, liberación y soporte.",
		"work_exp_cs_01": "Diseñé y desarrollé <em>&ldquo;Rex&rdquo;</em> (Estructura para Reconciliaciones), el desarrollo interno de una aplicación C# guiada por configuración, para implementar rápidamente reconciliaciones entre los datos de Compra/Ventas y Control de Operaciones de principio a fin, aumentando la agilidad para implementar nuevos negocios. En las oficinas de México, <em>&ldquo;Rex&rdquo;</em> reemplazó a Intellimatch (una costosa herramienta de terceros) lo cual generó ahorros anuales de CHF 50 mil Francos suizos. <em>&ldquo;Rex&rdquo;</em> también se utilizó para retirar herramientas tácticas/hojas de cálculo y para crear otras aplicaciones de procesamiento de datos (no únicamente reconciliaciones).",
		"work_exp_cs_02": "Diseñé y desarrollé <em>&ldquo;LCR Intradía&rdquo;</em>, el desarrollo interno de una aplicación C# guiada por configuración, para generar informes en tiempo real de Proporción de Cobertura de Liquidez (LCR) para las oficinas de Credit Suisse en México. LCR se refiere a la proporción de activos de alta liquidez mantenidos por las instituciones financieras, para así asegurar su capacidad continua para cumplir con sus obligaciones a corto plazo. Este índice es una prueba de tensión regulatoria requerida por el Banco Central (Banco de México). La importancia de este proyecto es que las autoridades reguladoras solo requieren mantener un cálculo del LCR con dos días de rezago, pero con este proyecto logré obtener datos intradía a través de interfaces con sistemas del área de Operaciones (<em>Back Office</em>), del área Comercial (<em>Front Office</em>) e incluso sistemas de terceros, obteniendo así cálculos en tiempo real. Ningún otro banco de inversión en México cuenta con una herramienta como esta, lo que le da a Credit Suisse una ventaja competitiva al poder tomar decisiones inmediatas para estabilizar el valor del LCR.",
		"work_exp_cs_03": "Desarrollé <em>&ldquo;MuFu&rdquo;</em> (VB.NET), el Sistema de Fondos Mutualistas de Banca Privada. El sistema fue certificado por las autoridades y en 2009 Credit Suisse pudo poner en marcha su franquicia de Banca Privada para iniciar operaciones en México.",
		"work_exp_cs_04": "Fui un participante clave del proyecto de migración iDesktop, enfocado en el análisis, conversión, validación e implementación de herramientas de hojas de cálculo para Nueva York y México. Hice un trabajo colaborativo con los equipos de Tecnologías de la Información de Nueva York, Asia/Pacífico y México para lograr los objetivos de iDesktop. Como parte del esfuerzo, logré la eliminación de hojas de cálculo heredadas en Nueva York y México luego de migrarlas a una solución estratégica implementada en ADAPT Framework. Formé parte del equipo que desarrolló un booker de pagos de swaps de divisas no entregables en ADAPT Framework (C#) para middle office que resultó en el desmantelamiento de cinco hojas de cálculo en Nueva York. El uso constante de la metodología GTD (<em>Getting Things Done</em>) / &ldquo;Organízate con eficacia&rdquo; me llevó a ser reconocido por el Director de Gestión de Tecnologías de la Información de Mercados Emergentes Globales, Joshua Rosenblatt, debido a mis excelentes resultados en el proyecto iDesktop.",
		"work_exp_cs_05": "Logré el desmantelamiento de la herramienta de reconciliación Polaris, brindando soporte externo al equipo de Tecnologías de la Información de OPICS con el desarrollo de una solución que generaba los datos de OPICS requeridos por la herramienta Intellimatch. También apoyé al esfuerzo de migración de OPICS proporcionando todo el análisis y las unidades de prueba del sistema EMG Jane.",
		"work_exp_cs_06": "Participé en la Iniciativa de Infraestructura de Derivados Estratégicos (SDII) migrando libros de México a EMG Jane (el Sistema de Gestión de Riesgos para Front Office). Lideré un pequeño equipo para desarrollar los procesos de interfaz personalizados de México a sistemas externos (DRD, OPICS, Arango), requeridos para áreas internas y entidades reguladoras, como el Banco de México. Realicé 7 migraciones de hojas de cálculo para resolver los problemas de control y riesgo operativo en la infraestructura de gestión de riesgos y negociación de derivados del banco. Generando ahorros de alrededor de $170 mil pesos al año.",
		"work_exp_cs_07": "Con base en mi sólida experiencia en ingeniería de software, fui elegido para formar parte del equipo de implementación de X-Ray en la mesa de operaciones en México. X-Ray se ha convertido en el estándar de facto para el marcado y publicación de curvas, las aplicaciones desarrolladas en el marco de X-Ray permiten a los operadores ver cotizaciones de corredores en tiempo real, calcular valores medios, anularlos si es necesario y publicar las cotizaciones todo desde una aplicación. También cuenta con pistas de auditoría para todos los cambios, proporcionando transparencia y un control más robusto. Implementé X-Ray para todos los datos requeridos en la construcción de curvas DMCF para las monedas MXN y UDI.",
		"work_exp_cs_08": "Desarrollé y, durante 4 años, fui el propietario de <em>&ldquo;CDS Curve Sync&rdquo;</em>, una herramienta C++ para sincronizar valores de CREDIT_DEFSPREAD en MDS (Sistema de Datos de Mercado) a través de mensajes CDS_SPREAD y CDS_RECOVERY JMS (Servicio de Mensajes Java). Esta herramienta sirvió a las mesas de operaciones de Nueva York, Londres y Asia/Pacífico, hasta que fue retirada y reemplazada por Marking Tool.",
		"work_exp_pp_summary": "Liderar proyectos, desarrollo y certificación de aplicaciones Terminal Punto de Venta (<em>POS: Point of Sale</em>).",
		"work_exp_pp_01": "Desarrollé y obtuve las certificaciones por parte de PROSA y Bancomer para las aplicaciones <em>&ldquo;Retail&rdquo;</em> y <em>&ldquo;Restaurant&rdquo;</em> (C++), lo que dio un impulso a las ventas de equipos POS de Sagem Monetel (terminales Sagem Monetel EFT930, EFT930G, EFT930S &amp; EFTsmart terminals) en México.",
		"work_exp_pp_02": "Desarrollé y obtuve las certificaciones por parte de PROSA para los sistemas <em>&ldquo;PointPayTMS&rdquo;</em> y <em>&ldquo;PointPayTC&rdquo;</em> (C++/Ensamblador) para inicialización y notificación de terminales vía modem.",
		"work_exp_pp_03": "Desarrollé y obtuve las certificaciones por parte de Bancomer para los sistemas <em>&ldquo;PointPayTMS&rdquo;</em>, <em>&ldquo;PointPayTMS - Multimerchant&rdquo;</em> y <em>&ldquo;PointPayTMS - TeleCarga Sin Asistencia&rdquo;</em> (C++/Ensamblador) para inicialización y notificación de terminales vía modem.",
		"work_exp_ba_summary": "Líder de proyecto, desarrollé y fui propietario del módulo de <em>&ldquo;Apertura de Cuentas&rdquo;</em> en la división de Sistemas de Captación.",
		"work_exp_ba_01": "Gestioné e implementé todo el proyecto <em>&ldquo;Sistema Nuevo Front para Apertura de Cuentas Bancarias&rdquo;</em> (C#), para México, Panamá y Guatemala. Ayudando así a abrir nuevas oficinas bancarias en esos países.",
		"work_exp_ba_02": "Desarrollé en C# los proyectos <em>&ldquo;Apertura de Cuentas&rdquo;</em>, <em>&ldquo;Consultas de Historial de Cuenta&rdquo;</em>, y <em>&ldquo;Consultas de Saldo&rdquo;</em> para México, Panamá y Guatemala.",
		"work_exp_ba_03": "Desarrollé y liberé la primera versión del proyecto <em>&ldquo;Apertura de Cuentas&rdquo;</em> para el producto <em>&ldquo;Guardadito Procampo&rdquo;</em> en todas las sucursales de México.",
		"work_exp_pt_summary": "Liderar proyectos, desarrollo y certificación de aplicaciones Terminal Punto de Venta (<em>POS: Point of Sale</em>).",
		"work_exp_pt_01": "Desarrollé los proyectos <em>&ldquo;Ethernet&rdquo;</em> y <em>&ldquo;Hotel&rdquo;</em> en C++ para VisaNet Guatemala.",
		"work_exp_pt_02": "Desarrollé las aplicaciones <em>&ldquo;Retail&rdquo;</em> y <em>&ldquo;Restaurant&rdquo;</em> en C++ y Lenguaje Ensamblador, para las terminales punto de venta Cybernet Jade y JadeAIRE (eAppliance y CyberSoft). Obtuve las certificaciones tanto técnicas como operativas de Promoción y Operación S.A. (PROSA).",
		"work_exp_pt_03": "Desarrollé los sistemas <em>&ldquo;PointTeleCarga&rdquo;</em> y <em>&ldquo;LatinPoint&rdquo;</em> en C++ y Lenguaje Ensamblador, para inicialización y notificación de terminales vía modem en PROSA.",
		"work_exp_ag_summary": "Desarrollo y análisis de un Almacén de Datos para seguros, una aplicación de logística para tráileres y una aplicación de restaurante.",
		"work_exp_ag_01": "Desarrollé <em>&ldquo;Estadísticas Vida&rdquo;</em>, un Almacén de Datos SQL Server para explotación estadística integrando detalles de los contratos de seguros provenientes de diversas fuentes en <u>Seguros Bancomer</u>.",
		"work_exp_ag_02": "Análisis y desarrollo de <em>&ldquo;Sistema de Mantenimiento y Almacenamiento (SIMA)&rdquo;</em>, un sistema de logística hecho en Visual Basic para llevar un control de generación de órdenes de embarque, asignación de unidades, facturación y rastreo de viajes para la flotilla de tráileres en <u>TUM - Transportistas Unidos Mexicanos</u>.",
		"work_exp_ag_03": "Análisis y desarrollo de <em>&ldquo;CuentaChiles&rdquo;</em>, un sistema de restaurante hecho en Visual Basic para llevar un control de comandas, inventarios de materias primas, recetas de alimentos y costos por platillo en <u>Grupo Anderson’s (Señor Frog's)</u>",
		"work_exp_io_summary": "Desarrollo y análisis de sistemas administrativos.",
		"work_exp_io_01": "Desarrollé el <em>&ldquo;Sistema Integral de Cobranza y Registro Escolar&rdquo;</em>, un sistema administrativo hecho en Visual Basic para llevar un control de pagos de colegiaturas y un control escolar de alumnos en el <u>Colegio Indoamericano</u>.",
		"work_exp_3s_summary": "Desarrollo y análisis de sistemas administrativos.",
		"work_exp_3s_01": "Desarrollé <em>&ldquo;Administración de Certificaciones&rdquo;</em>, un sistema administrativo hecho en Visual Basic para el registro y emisión de certificaciones para cursos de educación marítima en el <u>Instituto de Educación Náutica y Portuaria</u>.",
		"work_exp_se_summary": "Desarrollo y análisis de sistemas financieros.",
		"work_exp_se_01": "Análisis y desarrollo del <em>&ldquo;Sistema de Información Financiera (SIF)&rdquo;</em>, un sistema financiero hecho en Visual Basic para controlar el flujo de efectivo, generar reportes de cobros y pagos, gráficas presupuestales y consulta de operaciones bancarias en la <u>Afore Bancomer</u>.",
		"work_exp_bc_summary": "Desarrollo de sistemas financieros.",
		"work_exp_bc_01": "Desarrollo del <em>&ldquo;Sistema de Administración de Riesgos&rdquo;</em>, un sistema financiero hecho en Visual Basic para identificar, cuantificar y reportar diariamente la exposición al riesgo en las operaciones de la casa de bolsa <u>GBM - Grupo Bursátil Mexicano</u>.",
		"work_exp_id_summary": "Desarrollo de sistemas de seguros.",
		"work_exp_id_01": "Análisis y desarrollo de <em>&ldquo;Autos&rdquo;</em>, un sistema de seguros realizado en lenguaje Natural Adabas para capturar las tablas de tarifas, emisión de pólizas y reportes de endosos en <u>GNP - Grupo Nacional Provincial</u>",
		"work_exp_si_summary": "Desarrollo y análisis de software de Punto de Venta (POS) y caja registradora.",
		"work_exp_si_01": "Análisis y desarrollo de <em>&ldquo;PV-SinCo&rdquo;</em>, un software POS Retail hecho en C, C++ y Lenguaje Ensamblador para la estación de trabajo POS Retail NCR 7445.",
		"work_exp_si_02": "Análisis y desarrollo de <em>&ldquo;PVC-SinCo&rdquo;</em>, un sistema consolidador remoto hecho en C, C++ y Lenguaje Ensamblador para la recepción de reportes y envío de configuración vía modem entre la oficina central y las tiendas.",
		"work_exp_si_03": "Análisis y desarrollo de <em>&ldquo;SinCo Inventarios&rdquo;</em>, un sistema hecho en C++ para control de inventarios multi-almacén y multi-empresa.",
		"Overview:": "Descripción general:",
		"The motive:": "El motivo:",
		"The execution:": "La ejecución:",
		"Utilized:": "Utilizado:",
		"More details...": "Más detalles...",
		"Less details...": "Menos detalles...",
		"sw_rex_ov_01": "Diseñé e implementé en C# una estructura guiada por la configuración para automatizar procesos de reconciliación. Usé <em>Reflection</em> en C# para crear dinámicamente instancias de tipos de objetos existentes a partir de una configuración XML e invocar sus métodos o acceder a sus campos y propiedades.",
		"sw_rex_mt_01": "El objetivo principal del proyecto <em>&ldquo;Rex&rdquo;</em> fue el diseño e implementación de una Estructura para Reconciliaciones que fuera capaz de resolver necesidades y problemática propias de las áreas de Banca de Inversión en Credit Suisse México, donde se logró implementar exitosamente. En la práctica, el mayor logro para <em>&ldquo;Rex&rdquo;</em> fue el haber reemplazado en su totalidad a Intellimatch: un sistema existente de reconciliaciones hecho por terceros, y que además de caro, siempre ofrecía tiempos de desarrollo excesivamente largos.",
		"sw_rex_mt_02": "Esto ocurrió en el Área de Control de Productos Financieros. Una particularidad de ésta área es que durante un día normal de operación, la mayoría de sus funciones están enfocadas en mantener una vigilancia constante entre las operaciones concretadas de Compras y Ventas por parte de los Negociadores del Área Comercial, y las operaciones de Pagos y Cobros del Área de Operaciones.",
		"sw_rex_mt_03": "Para poder cumplir con sus funciones de vigilar la exactitud de las operaciones generadas en ambas áreas, se requieren herramientas de reconciliación entre los datos provenientes tanto de los sistemas del Área Comercial como los del Área de Operaciones; en su momento, esas herramientas de reconciliación eran responsabilidad de Intellimatch.",
		"sw_rex_mt_04": "Fue entonces que ocurrió un evento que sirvió como detonante para que la gerencia diera su autorización al desarrollo de una versión de <em>&ldquo;Rex&rdquo;</em>. Todo comenzó cuando el Área Comercial externó su interés en comenzar a ofrecer un nuevo producto a sus clientes, llamado &ldquo;Swapciones&rdquo;.",
		"sw_rex_mt_05": "Cada vez que el Área Comercial solicita el desarrollo de un nuevo producto financiero, hay toda una serie de modificaciones a los sistemas existentes a fin de que sean capaces de llevar a cabo tanto las valuaciones del mismo, como una correcta contabilidad y reporte de ganancias y pérdidas a las entidades reguladoras como el Banco de México.",
		"sw_rex_mt_06": "Una de las modificaciones más importantes tiene que ver con habilitar al Área de Control de Productos Financieros para llevar a cabo las reconciliaciones de las operaciones utilizando el nuevo producto. Así fue que ésta área solicitó a Intellimatch hacer un análisis del tiempo requerido para que le desarrollasen la reconciliación de las Swapciones. La estimación preliminar entregada por Intellimatch era de 10 meses de desarrollo.",
		"sw_rex_mt_07": "Varias áreas expresaron su rechazo inicial a la propuesta de Intellimatch, pues era casi un año de espera antes de que el Área Comercial pudiera comenzar a ofrecer el producto a sus clientes, pero sin una reconciliación en proceso de desarrollo, no podría darse luz verde a las demás áreas para implementar el producto en su totalidad.",
		"sw_rex_mt_08": "Al ver entonces la oportunidad de ofrecer una mejor opción, presenté una estimación rival para llevar a cabo el desarrollo interno, que disminuía el tiempo estimado de 10 a 6 meses, por un precio similar. De esos 6 meses de desarrollo, los primeros 4 meses estarían dedicados exclusivamente a construir el núcleo de <em>&ldquo;Rex&rdquo;</em>. Es decir, el desarrollo de la configuración, los lectores, procesadores y publicadores.",
		"sw_rex_mt_09": "Lo que hizo la diferencia y significó el éxito en la aceptación de la nueva propuesta, fue que los 2 meses restantes en el tiempo del desarrollo serían dedicados no sólo a configurar e implementar la reconciliación para las Swapciones, sino que como parte de la misma propuesta se incluía el desarrollo y migración de los otros 19 productos que ya estaban siendo reconciliados por Intellimatch, entre ellos: Bonds, Capsfloors, Depos, Equity Options, FX, FX Forwards, Loans, Repos, Swaps, etc.",
		"sw_rex_mt_10": "Ello significaba que en tan sólo la quinta parte del tiempo requerido por Intellimatch para desarrollar únicamente 1 producto, <em>&ldquo;Rex&rdquo;</em> era capaz de conseguir el desarrollo y migración completos para 20 productos.",
		"sw_rex_mt_11": "De esa forma, no sólo se garantizaba que sí sería posible poder ofrecerles a los clientes operaciones con Swapciones en un menor tiempo, mejorando las posibilidades de hacer crecer el negocio rápidamente. Además también eliminaba por completo la necesidad de seguir pagando la licencia anual de Intellimatch de varios miles de dólares, y permitía reemplazarlo por un desarrollo interno, mucho más barato en términos de desarrollo y de soporte.",
		"sw_rex_mt_12": "Así se demostró el éxito rotundo de la idea original llevada a la práctica y sirvió para expandir el interés en utilizar <em>&ldquo;Rex&rdquo;</em> en otro tipo de desarrollos como la eliminación de herramientas tácticas basadas en hojas de cálculo, además del desarrollo de otras aplicaciones de procesamiento de datos (no solamente reconciliaciones), como herramientas de validación y de migración de datos.",
		"sw_rex_ex_01": "Este es el primer borrador que hice para el modelo UML de Rex. Desde un principio imaginé un diseño basado en interfases de diferentes tipos que fueran implementadas por los objetos finales, y que a su vez serían instanciados mediante <em>Reflection</em>:",
		"sw_rex_ex_01_01": "Primer borrador del modelo UML de Rex",
		"sw_rex_ex_02": "Las tres interfaces principales eran <code>IDataSource</code>, <code>IDataProcessor</code> y <code>IDataPublisher</code>; en ese orden, se utilizaban para implementar los lectores, los procesadores y los publicadores de datos. La interfaz <code>IReconciliator</code> era un tipo especializado de objeto enfocado al procesamiento de reconciliaciones, y facilitó el desarrollo pues implementé objetos con nombres y valores estandarizados.",
		"sw_rex_ex_03": "Este diseño original tuvo después solo un cambio importante, ya que eliminé la interfaz <code>IDataFormatter</code>, la cual tenía el propósito de implementar diferentes formateadores para las salidas de datos, particularmente las que generarían reportes en Excel. Eso ya no fue necesario pues el requerimiento final pudo cumplirse simplemente creando un <em>template</em> personalizado en Excel con base en un esquema XML (.xsd) y generándolo dinámicamente importando los datos desde fuentes de datos generadas en formato XML:",
		"sw_rex_ex_03_01": "Proceso para usar datos XML en Excel",
		"sw_rex_ex_04": "En el prototipo de la primera versión incorporé el patrón de diseño <em>Factory Method</em> como un primer enfoque para controlar la creación de objetos diferentes:",
		"sw_rex_ex_04_01": "Implementación del patrón de diseño <em>Factory Method</em>",
		"sw_rex_ex_05": "Pero al investigar más acerca de <em>Reflection</em> decidí que mejor ese sería el enfoque definitivo del proyecto (reemplazando el uso del patrón de diseño <em>Factory Method</em>), ya que nos brindaría mayores ventajas al instanciar automáticamente objetos completos en base a la configuración XML.",
		"sw_rex_ex_14": "Para gestionar el repositorio de configuraciones XML utilicé un sistema de gestión de contenidos llamado OrchardCMS, que también permite administrar los controles de acceso con base en perfiles de usuario por cada área asociada con una aplicación específica.",
		"sw_rex_ex_15": "Implementé lectores de datos desde fuentes de bases de datos Oracle, SQL Server y Sybase.",
		"sw_rex_ex_16": "Desarrollé la interfaz de usuario para la generación y monitoreo de reconciliaciones en una herramienta basada en HTML5 llamada Adapt Framework.",
		"sw_dpf_ov_01": "Diseñé e implementé en Java una estructura para procesamiento de datos guiada por la configuración. Usé la Arquitectura Java para Enlazado de XML (<em>JAXB: Java Architecture for XML Binding</em>) para crear dinámicamente instancias de tipos de objetos existentes a partir de una configuración XML e invocar sus métodos o acceder a sus campos y propiedades.",
		"sw_dpf_mt_01": "El desarrollo de este proyecto ha estado motivado esencialmente por la experiencia obtenida durante más de 25 años en distintas áreas operativas de instituciones financieras como bancos, aseguradoras y administradoras de fondos para el retiro (afores). Durante todo ese tiempo, fui llegando a la conclusión de que todas esas áreas tenían un común denominador, pues en cada una de ellas existía un subconjunto específico de actividades que involucraban procesos diarios de migración, conversión y explotación de datos; provenientes de fuentes cuyo formato era tan diverso como la manera de acceder a ellas.",
		"sw_dpf_mt_02": "Por regla general, esas necesidades estaban relacionadas con tareas como validaciones, conciliaciones, reportes, entre otras; y siempre habían existido múltiples soluciones a ellas: desde el procesamiento manual, software de terceros, hasta desarrollos a la medida (tanto subcontratados como hechos en casa).",
		"sw_dpf_mt_03": "Una problemática en particular ocurría en el contexto de los desarrollos hechos a la medida y estaba relacionada directamente con el código fuente, pues por lo general no existía un consenso estandarizado en cuanto al lenguaje de programación, los estándares de codificación y la metodología para el desarrollo en general.",
		"sw_dpf_mt_04": "Fue entonces que logré identificar las principales consecuencias de esa problemática, y que de seguir así, pondrían en riesgo la estabilidad del área, y la continuidad de los procesos diarios:",
		"sw_dpf_mt_04_01": "Código heredado sin documentar.",
		"sw_dpf_mt_04_02": "Dificultad para solucionar errores rápidamente por la complejidad de las diferentes aplicaciones.",
		"sw_dpf_mt_04_03": "Duplicación del trabajo al hacer diferentes versiones de procedimientos utilitarios comunes.",
		"sw_dpf_mt_04_04": "Tiempos de desarrollo lentos, al tener que analizar y diseñar aplicaciones similares desde cero.",
		"sw_dpf_mt_05": "Ello me llevó a afirmar que una estructura estandarizada y configurable para el procesamiento de datos brindaría los siguientes beneficios para los desarrolladores de diferentes áreas, lo que redundaría en una mayor capacidad de respuesta y una mejor calidad en los entregables informáticos:",
		"sw_dpf_mt_05_01": "Facilidad para trabajar con tecnologías complejas.",
		"sw_dpf_mt_05_02": "Agrupamiento de objetos y componentes separados en algo de mayor utilidad.",
		"sw_dpf_mt_05_03": "Se obliga al equipo de desarrollo a implementar código de una manera que promueva la codificación consistente, menos errores, y aplicaciones más flexibles.",
		"sw_dpf_mt_05_04": "Que cualquiera pueda efectuar fácilmente pruebas y rastreo del código, inclusive código escrito por alguien más.",
		"sw_dpf_mt_06": "El objetivo consistió en desarrollar una &ldquo;Estructura para el Procesamiento de Datos (<em>Data Processing Framework</em>)&rdquo; en un lenguaje de programación orientado a objetos, cuya arquitectura se fundamentó en los patrones de diseño, y que su enfoque de desarrollo fuera uno controlado por la configuración.",
		"sw_dpf_mt_07": "Para el desarrollo se utilizó el lenguaje de programación Java, aplicando sólo los patrones de diseño específicos para optimizar los diferentes casos de uso. La configuración de las aplicaciones estuvo basada en el lenguaje XML, implementando la propiedad de la reflexión de código a fin de crear instancias de objetos en tiempo de ejecución.",
		"sw_dpf_mt_08": "La arquitectura básica consideró los siguientes tipos de clases y sus funcionalidades:",
		"Type": "Tipo",
		"Class": "Clase",
		"Functionality": "Funcionalidad",
		"Reader": "Lector",
		"Processor": "Procesador",
		"Publisher": "Publicador",
		"sw_dpf_mt_09": "Módulo para leer los datos desde sus fuentes",
		"sw_dpf_mt_09_01": "Lee desde archivos de texto separados por comas (CSV).",
		"sw_dpf_mt_09_02": "Lee desde archivos de texto por posición (TXT).",
		"sw_dpf_mt_09_03": "Lee desde consultas a bases de datos (SQL).",
		"sw_dpf_mt_09_04": "Lee desde archivos de texto con formato XML.",
		"sw_dpf_mt_10": "Módulo para efectuar procesamiento sobre los datos",
		"sw_dpf_mt_10_01": "Agrupar valores totalizados en base a valores llave.",
		"sw_dpf_mt_10_02": "Clonar el tipo de dato y el valor de una columna.",
		"sw_dpf_mt_10_03": "Clonar la estructura y el contenido de una tabla.",
		"sw_dpf_mt_10_04": "Comparar columnas valor de una tabla previamente conciliada.",
		"sw_dpf_mt_10_05": "Conciliar diferencias entre valores llave.",
		"sw_dpf_mt_10_06": "Dividir columnas de una tabla conservando referencias llave.",
		"sw_dpf_mt_10_07": "Eliminar una columna en su totalidad.",
		"sw_dpf_mt_10_08": "Eliminar una tabla en su totalidad.",
		"sw_dpf_mt_10_09": "Equivaler columnas de datos con valores de equivalencia.",
		"sw_dpf_mt_10_10": "Filtrar valores en base a un criterio específico.",
		"sw_dpf_mt_10_11": "Fusionar los datos de dos tablas con la misma estructura en una nueva tabla.",
		"sw_dpf_mt_10_12": "Insertar una nueva columna especificando su tipo de dato y valor.",
		"sw_dpf_mt_10_13": "Ordenar los datos de una tabla en base a un conjunto de columnas valor.",
		"sw_dpf_mt_10_14": "Transformar valores en base a criterios de transformación como formato o valor.",
		"sw_dpf_mt_10_15": "Unir registros de dos tablas cuya coincidencia ocurra en los valores llave.",
		"sw_dpf_mt_11": "Módulo para publicar la información ya procesada",
		"sw_dpf_mt_11_01": "Publica hacia archivos de texto separados por comas (CSV).",
		"sw_dpf_mt_11_02": "Publica hacia archivos de texto por posición (TXT).",
		"sw_dpf_mt_11_03": "Publica hacia actualizaciones a bases de datos (SQL).",
		"sw_dpf_mt_11_04": "Publica hacia archivos de texto con formato XML.",
		"sw_dpf_mt_12": "Casos de Uso",
		"sw_dpf_mt_12_01": "Migración",
		"sw_dpf_mt_12_02": "Reporte",
		"sw_dpf_mt_12_03": "Conciliación",
		"sw_dpf_mt_13": "Dado que la naturaleza de este desarrollo era la de ser un programa de servicio, éste no contó con una interfaz gráfica para un sistema operativo específico. En vez de ello, se desarrolló una interfaz de línea de comandos con manejo de parámetros para conducir la ejecución.",
		"sw_dpf_mt_14": "Respecto del módulo de carga de datos, solo se hizo el desarrollo para un manejador específico de base de datos (MySQL), sin embargo, es parte de la visión evolutiva de la estructura que se pueda ir mejorando con la agregación de funcionalidad al núcleo principal, sin que por ello se vea afectada la operación de implementaciones anteriores.",
		"sw_dpf_mt_15": "Es importante hacer mención de que la versión original de la Estructura para el Procesamiento de Datos fue desarrollada en el lenguaje C#, basado en métodos de Reflexión de Código (<em>Reflection</em>) propios del lenguaje y con una funcionalidad reducida.",
		"sw_dpf_mt_16": "Por cuestiones de protección a la propiedad intelectual de la entidad financiera donde se hizo el desarrollo original, la versión del presente trabajo tuvo que ser nuevamente desarrollada desde cero en el lenguaje Java, con un diseño similar, pero extendiendo su alcance a otros tipos adicionales de procesamiento, y lo más importante, sin utilizar los métodos de Reflexión de Código (al ser propios del lenguaje C#), y en vez de ello, utilizando los métodos de Arquitectura Java para Enlazado de XML (<em>JAXB: Java Architecture for XML Binding</em>).",
		"sw_dpf_mt_17": "Buena parte de la decisión de haber realizado desde cero el desarrollo en el lenguaje Java, es la posibilidad de que también se pudiera ofrecer el código completo de manera abierta para su reutilización y mejora, como un beneficio adicional a la comunidad.",
		"sw_dpf_mt_18": "Y por último pero no menos importante, este fue el tema de mi Tesis para la Maestría en Ciencias en Informática:",
		"sw_dpf_mt_18_01": "La Tesis",
		"sw_dpf_ex_01": "En el diseño del modelo de objetos para una DPF se establece una disposición jerárquica, con una clase principal en la parte superior, compuesta por otras clases derivadas.",
		"sw_dpf_ex_01_01": "Modelo UML de DataProcessingFramework",
		"sw_dpf_ex_02": "El modelo de objetos comienza con la clase principal <code>DataProcessingFramework</code>. Existe una relación de composición entre las clases <code>Parameter</code> y <code>Solution</code> con la clase <code>DataProcessingFramework</code>, ya que ambas forman parte de ella y tienen dependencias en sus respectivos ciclos de vida. Y también existe una relación de composición entre las interfaces <code>Reader</code>, <code>Processor</code> y <code>Publisher</code> con la clase <code>Solution</code>, pues entre las tres definen el proceso completo de una solución.",
		"sw_dpf_ex_03": "La configuración está basada principalmente en archivos XML conteniendo todo el detalle de la configuración (parámetros y soluciones), y mediante el uso de la tecnología JAXB, se generan las instancias de los objetos configurados en tiempo de ejecución, y se lanzan los procesos que componen la DPF.",
		"sw_dpf_ex_04": "La Arquitectura Java para Enlazado de XML (<em>JAXB: Java Architecture for XML Binding</em>) es la Interfaz de Programación de Aplicaciones (<em>API: Application Programming Interface</em>) estándar de Java para Enlazado (<em>Binding</em>) de XML. Se trata de una extensión estándar del lenguaje incluida desde Java 6 y posteriores.",
		"sw_dpf_ex_05": "La ventaja principal de utilizar JAXB es que ya no es necesario hacer el desarrollo de un código potencialmente frágil de análisis sintáctico para XML. Simplemente se incluyen las anotaciones necesarias en las propias clases Java que permitan hacer el enlazado con la configuración XML.",
		"sw_dpf_ex_06": "JAXB proporciona una manera rápida y conveniente para enlazar esquemas XML con sus representaciones Java, por lo que resulta fácil incorporar funciones de datos y procesamiento XML en las aplicaciones Java. Como parte de este proceso, JAXB proporciona métodos para efectuar la disgregación (<em>unmarshalling</em>) de documentos de instancia XML hacia árboles de contenido Java.",
		"sw_dpf_ex_07": "Esto permite que en tiempo de ejecución, JAXB pueda leer un documento XML y convertirlo a instancias de clases Java previamente desarrolladas, poblando el modelo de objetos y validando los datos para asegurarse de que coincide con el esquema de configuración.",
		"sw_dpf_ex_08": "Este es el esquema básico de una estructura XML que puede procesarse mediante JAXB para una implementación de la clase <code>DataProcessingFramework</code> que contiene el atributo <code>name</code> con el valor <code>&quot;Data Processing Framework&quot;</code>, el elemento <code>parameters</code> conteniendo una lista de una o más implementaciones de la clase <code>Parameter</code> y el elemento <code>solutions</code> conteniendo una lista de una o más implementaciones de la clase <code>Solution</code>.",
		"sw_dpf_ex_08_01": "Configuración XML de DataProcessingFramework",
		"sw_dpf_ex_09": "Cada <code>&lt;solution&gt;</code> se compone de tres secciones: <code>&lt;readers&gt;</code>, <code>&lt;processors&gt;</code> y <code>&lt;publishers&gt;</code>. Dentro de cada una de esas secciones se agrupan una o más definiciones de clases de funcionalidad específica.",
		"sw_dpf_ex_09_01": "Configuración XML de Solutions",
		"sw_dpf_ex_10": "Un ejemplo básico de la funcionalidad DPF podría ser el procesamiento de un archivo de texto con los valores colocados de un ancho fijo, es decir sin delimitadores que identifiquen la separación entre valores:",
		"sw_dpf_ex_10_01": "Archivo de entrada con valores de ancho fijo",
		"sw_dpf_ex_11": "Y con esta configuración XML se efectúa el procesamiento mediante un lector de archivos de ancho fijo, un procesador de ordenamiento, y un publicador de archivos delimitados:",
		"sw_dpf_ex_11_01": "Ejemplo de configuración XML para un caso de uso de conversión de datos",
		"sw_dpf_ex_12": "Dando como resultado el archivo de salida ya procesado:",
		"sw_dpf_ex_12_01": "Archivo de salida ordenado y con valores delimitados",
		"sw_dpf_ex_13": "Un ejemplo de implementación para una funcionalidad específica está en este diagrama UML de la clase <code>DelimitedTextFilePublisher</code>, que se encarga de publicar el archivo de salida del ejemplo anterior:",
		"sw_dpf_ex_13_01": "Modelo UML de DelimitedTextFilePublisher",
		"sw_dpf_ex_14": "Esta es la implementación Java de <code>DelimitedTextFilePublisher</code>. Contiene las anotaciones necesarias para utilizar JAXB: <code>@XmlRootElement</code>, <code>@XmlAttribute</code> y <code>@XmlElement</code>:",
		"sw_dpf_ex_14_01": "Implementación Java de DelimitedTextFilePublisher",
		"sw_pay_ov_01": "Desarrollé en C++ y Lenguaje Ensamblador las aplicaciones <em>&ldquo;Retail&rdquo;</em> y <em>&ldquo;Restaurant&rdquo;</em>, para las terminales punto de venta de las marcas Cybernet y Sagem Monetel. Las aplicaciones recibieron certificaciones técnicas y operativas por parte de PROSA y Bancomer.",
		"sw_pay_mt_01": "Entre 2001 y 2004 trabajé para la empresa de origen noruego Point Transaction Systems de México, y fui responsable de los dos proyectos más importantes en ese entonces, pues estaban trayendo a México por primera vez las terminales punto de venta para pagos de la marca coreana Cybernet.",
		"sw_pay_mt_02": "Esos dos proyectos consistían en desarrollar las aplicaciones completas llamadas <em>&ldquo;Retail&rdquo;</em> y <em>&ldquo;Restaurant&rdquo;</em>, que básicamente son los dos casos de uso más comunes en las estrategias de venta de ese tipo de terminales. Además obtuve para ambas aplicaciones las certificaciones técnicas y operativas por parte de la empresa PROSA.",
		"sw_pay_mt_03": "PROSA (originalmente llamada Promoción y Operación) es una empresa mexicana fundada por 10 bancos en agosto de 1969 para sacar al mercado la tarjeta de crédito <strong>Carnet</strong>. Entre ellos estaban: Banco de Londres y México (hoy Banco Santander), Banco Comercial Mexicano (hoy Scotiabank) y otras ocho instituciones de aquella época. Dados los altos costos hundidos e inversión en tecnología que requería sacar una tarjeta de crédito, esos diez bancos se unieron en un proyecto conjunto para contar con una plataforma de forma sindicada.",
		"sw_pay_mt_04": "La primera tarjeta bancaria de crédito de México, también identificada como la primera de toda América Latina, había sido lanzada al mercado el 15 de enero de 1968 por el Banco Nacional de México, Banamex (hoy Citibanamex), entonces uno de los dos mayores bancos privados de México. La tarjeta fue llamada Bancomático, internacionalmente estaba afiliada al sistema de Interbank – Master Charge (hoy conocido como Mastercard).",
		"sw_pay_mt_05": "Un año más tarde, Bancomer (hoy BBVA Bancomer), otro de los mayores bancos del país, emitió su tarjeta en junio de 1969, afiliada al sistema, BankAmericard (hoy conocido como Visa) de Bank of America.",
		"sw_pay_mt_06": "Primero Banamex, luego Bancomer, desarrollaron sistemas propios para operar sus tarjetas. Esto fue posible porque ambos bancos estaban computarizando operaciones en esos años, lo cual respondía a su gran escala en el mercado minorista.",
		"sw_pay_mt_07": "Hoy en día los dueños de PROSA son Banorte, Scotiabank, Santander, HSBC, Invex, y Banjército. A la fecha PROSA realiza 3 mil 600 millones de transacciones al año, lo que significa una facturación de 1.3 billones de pesos con plásticos que no son solo de sus socios, sino de una gran cantidad de intermediarios financieros no bancarios como sofomes, sofipos, sapis, cajas de ahorro, etc. Y junto con E-Global de Bancomer y Citibanamex, es uno de los grandes impulsores en México del uso de medios de pago.",
		"sw_pay_mt_08": "Del 2006 al 2007 regresé a trabajar a la misma empresa, que había cambiado de nombre a PointPay International Inc.; y dada la experiencia y logros que tuve anteriormente con las terminales Cybernet, volví a ser el responsable de los proyectos <em>&ldquo;Retail&rdquo;</em> y <em>&ldquo;Restaurant&rdquo;</em>, pero ahora para unas nuevas terminales de la marca francesa Sagem Monetel que también estaban por introducir al mercado mexicano.",
		"sw_pay_mt_09": "Y en esta ocasión no solamente obtuve para ambas aplicaciones las certificaciones técnicas y operativas por parte de PROSA, sino ahora también de Bancomer, el segundo operador de transacciones electrónicas más importante en México.",
		"sw_pay_ex_01": "POS (<em>Point of Sale</em>) es la abreviatura de punto de venta, que se refiere a cualquier lugar donde puede ocurrir una transacción, ya sea para un producto o servicio.",
		"sw_pay_ex_02": "Para los minoristas, esa suele ser el área que rodea la caja registradora. En un restaurante clásico, donde se le paga a un cajero en lugar de darle el dinero a una mesera, esa área junto a la caja registradora también se considera el punto de venta. Y si se cuenta con una terminal punto de venta móvil, toda la tienda se convierte efectivamente en un punto de venta.",
		"sw_pay_ex_03": "El primer concepto que se debe entender sobre un sistema POS es que consta de hardware y software de punto de venta. Juntos, estos dos componentes brindan a los comerciantes todas las herramientas que necesitan para aceptar métodos de pago populares, específicamente tarjetas de crédito y débito.",
		"sw_pay_ex_04": "Para el desarrollo del software para las terminales Cybernet se requería el uso de eAppliance, que era un emulador del sistema operativo Cybersoft de la terminal enlazado al compilador Turbo C++.",
		"sw_pay_ex_05": "Algunas funciones requerían el uso de instrucciones de ensamblador embebido en el código C++, específicamente las instrucciones que implementé para la comunicación por módem desde la terminal hacia el sistema que desarrollé para inicializar los parámetros y configuración base de las terminales antes de su entrega a los clientes.",
		"sw_pay_ex_06": "El desarrollo del software para las terminales Sagem Monetel no requería el uso de emuladores, ya que se podían programar directamente por cable y ejecutar los programas compilados en Borland C++.",
		"sw_caj_ov_01": "Diseñé e implementé en C, C++ y Lenguaje Ensamblador un sistema de caja registradora para la estación de trabajo punto de venta NCR 7445.",
		"sw_caj_mt_01": "Luego de terminar el último semestre de la Licenciatura en Ciencias en Informática, supe que uno de los requisitos para el trámite de titulación consistía en realizar prácticas profesionales en una empresa.",
		"sw_caj_mt_02": "No tenía idea de donde comenzar la búsqueda, pero afortunadamente encontré un anuncio en la jefatura de informática de la escuela, solicitando alumnos con interés de realizar sus prácticas en un proyecto de desarrollo de software.",
		"sw_caj_mt_03": "Así, a principios del 1996 inicié mis prácticas profesionales en la empresa SinCo - Soluciones, Informática y Comunicaciones.",
		"sw_caj_mt_04": "La empresa había sido fundada por Carlos Canales, quien trabajó durante 20 años para la NCR Corporation en México, en donde ocupó varias posiciones directivas para ser finalmente presidente y director general de NCR en Colombia. Y en 1992 fue el Presidente y Director General fundador de la actual Apple Computer México.",
		"sw_caj_mt_05": "Tuve la gran fortuna de que mis actividades tuvieran que ver con un sistema genial llamado <em>&ldquo;Quick Data&rdquo;</em>. Era un sistema integrador de información que podía manejar grandes volúmenes de información y generar rápidamente consultas, reportes y estadísticas. Durante tres meses conocí el sistema, documenté un nuevo manual de usuario, y logré hacerle algunas mejoras de estandarización al código.",
		"sw_caj_mt_06": "Al término de mis prácticas profesionales, Carlos Canales me ofreció la oportunidad de ser contratado, por lo que acepté la oferta y conseguí mi primer trabajo como analista programador.",
		"sw_caj_mt_07": "Mi primer proyecto tenía que ver con hacer ingeniería inversa a un programa que estaba incompleto y sin documentar, y que resultó ser el esqueleto de un sistema de caja registradora. El código fuente en Lenguaje C era lo único que le había entregado una empresa texana, a quienes había contratado hacía un par de años para que le desarrollara el software completo, pero les canceló el contrato por no mostrar avances en tanto tiempo. Desde que Canales había salido de NCR tuvo la visión de emprender un negocio alterno relacionado con las terminales punto de venta de la NCR, aprovechando el conocimiento y contactos que aún mantenía en la empresa, y ese software era parte central de su estrategia.",
		"sw_caj_mt_08": "Luego de seis meses yo logré completar y echar a andar el software e implementarlo con éxito en la estación de trabajo POS Retail NCR 7445 Falcon.",
		"sw_caj_mt_09": "Y así fue que conseguimos a nuestro primer cliente, La Estrella de Mixcalco, un mayorista de ropa en el centro de la ciudad con varias sucursales. Ellos adquirieron varias terminales interesados en el software que les ayudaría con su flujo de ventas, y luego de algunos meses conseguí estabilizar el software e instalar terminales en varias sucursales.",
		"sw_caj_ex_01": "Un sistema de punto de venta caja registradora está enfocado principalmente en registrar los precios de una cierta cantidad de productos para su venta, y emitir un recibo con el total a pagar, además de llevar un registro del efectivo en el cajón de dinero, entre otras funcionalidades.",
		"sw_caj_ex_02": "Como parte de la integración del software con el hardware, tuve que desarrollar funciones en lenguaje ensamblador para leer los códigos de barras con un escáner de pistola, para expulsar el cajón de dinero, para recibir lecturas de una báscula externa, y principalmente para generar matrices de códigos para impresión para personalizar los recibos impresos.",
		"sw_caj_ex_03": "La parte más importante que le hacía falta al código fuente original era lo relacionado con el almacenamiento de datos, por lo que implementé uno basado en archivos ISAM (<em>acrónimo de Indexed Sequential Access Method</em> o método de acceso secuencial indexado), similar al que utilizaban en <em>&ldquo;Quick Data&rdquo;</em>, y que era lo que explicaba que sus tiempos de acceso aleatorio fueran extremadamente rápidos. Eso me permitió lograr tiempos de respuesta muy rápidos al momento de escanear el código de barras y consultar el precio desde los archivos de datos.",
		"sw_caj_ex_04": "Años más tarde, cuando tuve que desarrollar un trabajo final para la clase de Almacenamiento de Datos en la Maestría, hice un rediseño de la estructura de datos para un software de caja registradora, inspirada en aquellos archivos ISAM originales. Pero ahora con un modelo para base de datos relacional:",
		"sw_caj_ex_04_01": "Diagrama general entidad-relación",
		"sw_caj_ex_04_02": "Diagrama de entidades MySQL",
		"sw_caj_ex_05": "En lo referente al registro automatizado de los productos, todo gira en torno al <strong>PLU</strong>, que es la abreviatura de <em>Price Look Up</em>, y hace referencia a los códigos utilizados en los supermercados para facilitar el control de inventario y su registro en la cajas registradoras. La entidad contiene valores específicos de cada artículo, como el Precio, Cantidad Disponible, y Cantidad por Precio.",
		"sw_caj_ex_05_01": "Originalmente, se trataba de un código de 4 dígitos.",
		"sw_caj_ex_05_02": "Luego, cuando 4 dígitos fueron insuficientes, entonces evolucionó a 5.",
		"sw_caj_ex_05_03": "Pero con el surgimiento de los lectores láser de códigos de barras, se estandarizó el uso del código estándar de 16 dígitos.",
		"sw_caj_ex_05_04": "Además del PLU, existen estas otras entidades de datos definidas en el modelo entidad-relación:",
		"sw_caj_ex_06": "Nivel",
		"sw_caj_ex_06_01": "Es la agrupación principal para las entidades que conservan totales acumulados. Hace referencia a los niveles de cortes de caja. Se relaciona también con los turnos de los Operadores.",
		"sw_caj_ex_07": "Grupo",
		"sw_caj_ex_07_01": "Es la agrupación para los Departamentos. Por ejemplo, un Grupo puede ser definido como <em>&ldquo;Ropa&rdquo;</em>, y puede agrupar a los Departamentos definidos como: <em>&ldquo;Damas&rdquo;</em>, <em>&ldquo;Caballeros&rdquo;</em>, <em>&ldquo;Bebés&rdquo;</em>, etc.",
		"sw_caj_ex_08": "Departamento",
		"sw_caj_ex_08_01": "Es la agrupación para los PLU’s, y puede tener valores como <em>&ldquo;Abarrotes&rdquo;</em>, <em>&ldquo;Lácteos&rdquo;</em>, <em>&ldquo;Panadería&rdquo;</em>, etc.",
		"sw_caj_ex_09": "Impuesto",
		"sw_caj_ex_09_01": "Son las descripciones y tasas de los diferentes impuestos asociados con cada PLU.",
		"sw_caj_ex_10": "Forma de Pago",
		"sw_caj_ex_10_01": "Son las Formas de Pago como <em>&ldquo;Efectivo&rdquo;</em>, <em>&ldquo;Cheques&rdquo;</em>, <em>&ldquo;Tarjeta de Crédito&rdquo;</em>, <em>&ldquo;Vales&rdquo;</em>, etc.",
		"sw_caj_ex_11": "Descuento",
		"sw_caj_ex_11_01": "Son las claves de los descuentos predefinidos.",
		"sw_caj_ex_12": "Operación",
		"sw_caj_ex_12_01": "Agrupa los importes asociados a cada Operación efectuada por un Operador determinado.",
		"sw_caj_ex_13": "Operador",
		"sw_caj_ex_13_01": "Es el usuario que controla la caja registradora.",
		"sw_caj_ex_14": "Comisión",
		"sw_caj_ex_14_01": "Agrupa los importes relacionados con las comisiones de cada Operador.",
		"sw_caj_ex_15": "Tienda",
		"sw_caj_ex_15_01": "Catálogo de Tiendas que contienen las Cajas Registradoras.",
		"sw_caj_ex_16": "Totales",
		"sw_caj_ex_16_01": "Existen tablas dependientes que acumulan totales manteniendo la agrupación por Nivel, y por otra agrupación proveniente de las entidades independientes. Las tablas que acumulan contadores y totales son las siguientes:",
		"sw_caj_ex_16_01_01": "Totales por Grupo",
		"sw_caj_ex_16_01_02": "Totales por Departamento",
		"sw_caj_ex_16_01_03": "Totales por PLU",
		"sw_caj_ex_16_01_04": "Totales por Impuesto",
		"sw_caj_ex_16_01_05": "Totales por Forma de Pago",
		"sw_caj_ex_16_01_06": "Totales por Descuento",
		"sw_caj_ex_16_01_07": "Totales por Operación",
		"sw_caj_ex_16_01_08": "Totales por Operador",
		"sw_caj_ex_16_01_09": "Comisiones por Operador",
		"sw_caj_ex_16_01_10": "Totales por Caja",
		"sw_caj_ex_17": "Información de Ticket",
		"sw_caj_ex_17_01": "Contiene un registro por cada una de las líneas a ser impresas en el encabezado y pie del ticket, y se agrupan por Caja.",
		"sw_caj_ex_18": "Movimiento",
		"sw_caj_ex_18_01": "Es el detalle de cada movimiento efectuado en caja, el cual no necesariamente tiene que ser una venta, pero es necesario para llevar un registro de los movimientos en cada caja, y pueden ser de estos tipos:",
		"sw_caj_ex_18_01_01": "Venta",
		"sw_caj_ex_18_01_02": "Cancelación",
		"sw_caj_ex_18_01_03": "Devolución",
		"sw_caj_ex_19": "Banderas por Caja",
		"sw_caj_ex_19_01": "Mantiene la configuración específica para modificar el comportamiento de cada caja. Su uso es particularmente a nivel de programación, donde se implementa el comportamiento de cada bandera en específico.",
		"Cash Register / Point of Sale System": "Caja Registradora / Sistema Punto de Venta",
		"NCR 7445 Retail POS Workstation": "Estación de Trabajo de Punto de Venta Minorista NCR 7445",
		"Generating code matrices for printing": "Generando matrices de códigos para impresión",
		"Entity": "Entidad",
		"sw_mex_ov_01": "Diseñé y desarrollé en GW-BASIC un sistema gráfico de selección y consulta de mapas de México y sus estados.",
		"sw_mex_mt_01": "Aprendí a programar por primera vez en el lenguaje GW-BASIC desde el primer semestre de la carrera de Licenciatura en Ciencias en Informática, durante la materia de Introducción a los Lenguajes de Programación. Y para aprobar la materia, el profesor nos pidió elaborar un proyecto final de tema libre, programado en GW-BASIC.",
		"sw_mex_mt_02": "La primer idea que me vino a la mente fue crear algo que tuviera gráficos, aunque aún no estaba seguro si eso era posible en GW-BASIC. Era 1990, y el acceso a internet apenas era privilegio de unos cuantos en algunos centros de investigación del país, por lo que no resultaba fácil encontrar respuestas rápidamente como lo es hoy en día. Las únicas herramientas a las que yo tenía acceso eran una computadora PC-XT con procesador Intel 8088 de la marca Sperry (similar a las IBM PC) y algunos libros de GW-BASIC en la biblioteca de la escuela.",
		"sw_mex_mt_03": "Mi objetivo era mostrar en pantalla una vista completa del mapa de México y su división por estados. Y que mediante el uso de las teclas de flechas poder navegar entre cada uno de los estados hasta seleccionar uno con la tecla Enter, y que en ese momento mostrara una versión ampliada del mapa de ese estado en particular. Y finalmente con la tecla Esc regresar al mapa original. Exactamente como lo he representado en esta simulación que hice recientemente (el proyecto original funcionaba igual, solo que un poco más pixeleado):",
		"sw_mex_ex_01": "Cuando supe que el principal concepto de los gráficos en computadora tenía que ver con una matriz de pixeles, instantáneamente lo asocié con el papel milimétrico que había utilizado años antes para hacer dibujos arquitectónicos a escala (una suerte de entronque entre la arquitectura de edificios y la arquitectura de software).",
		"sw_mex_ex_01_01": "Sabiendo eso, hice mi primera animación de prueba con el dibujo de una rana saltando que tomé del diseño de un pañuelo desechable:",
		"sw_mex_ex_02": "Copié el dibujo a una hoja de papel milimétrico, y además creé un nuevo dibujo adicional de una tercera rana justo al momento de iniciar su salto, para conseguir la secuencia completa:",
		"sw_mex_ex_03": "La versión final muestra (en la parte de abajo) el boceto completo del salto en versión más pequeña, y básicamente la técnica que utilicé fue simplemente que el cuadrito (o pixel) por donde pasaba la línea se encendía, y entonces rellenaba cada uno con una bolita hecha a lápiz:",
		"sw_mex_ex_04": "Utilicé entonces la misma técnica para crear la pantalla principal de mi sistema con el mapa completo de México:",
		"sw_mex_ex_05": "La parte principal del proyecto es cuando descubrí el uso de las instrucciones <code>PAINT</code> y <code>DRAW</code>. Utilicé <code>PAINT</code> para rellenar de color cada estado a partir de un punto central y hasta sus bordes, para hacer la animación de cambio de color. Y utilicé <code>DRAW</code> para dibujar en pantalla todo el contorno de cada mapa. <code>DRAW</code> utilizaba como parámetros valores basados en un Lenguaje de Macros de Gráficos (<em>GML: Graphics Macro Language</em>), es decir, una secuencia de instrucciones para dibujar. Las instrucciones principales son:",
		"sw_mex_ex_05_01": "hacia arriba",
		"sw_mex_ex_05_02": "hacia abajo",
		"sw_mex_ex_05_03": "hacia la izquierda",
		"sw_mex_ex_05_04": "hacia la derecha",
		"sw_mex_ex_05_05": "diagonalmente hacia arriba y hacia la derecha",
		"sw_mex_ex_05_06": "diagonalmente hacia abajo y hacia la derecha",
		"sw_mex_ex_05_07": "diagonalmente hacia abajo y hacia la izquierda",
		"sw_mex_ex_05_08": "diagonalmente hacia arriba y hacia la izquierda",
		"sw_mex_ex_06": "Estas son mis notas con todo el conjunto de instrucciones que generé a mano para dibujar el mapa completo de México:",
		"sw_mex_ex_07": "Eso sí, luego de ver todo el tiempo y trabajo manual que me esperaba realizar para obtener los conjuntos de instrucciones para los 32 mapas de cada estado, en lugar de ello decidí programar una herramienta con la que iba generando cada archivo de texto conteniendo las instrucciones generadas utilizando las teclas de flechas (como una especie de videojuego), de tal forma que yo simplemente iba siguiendo con el dedo la ruta del mapa y tecleando las flechas para ir trazando en el archivo la secuencia completa de instrucciones.",
		"sw_mex_ex_07_01": "Aquí está un collage con los 32 mapas adicionales:",
		"sw_mex_ex_08": "Finalmente también existen instrucciones especiales para moverse de posición sin efectuar trazos, o para trazar líneas entre dos puntos:",
		"sw_mex_ex_08_01": "Mover absoluto o relativo. Si x va precedido de un + o -, x e y se suman a la posición actual de los gráficos y se conectan a la posición actual mediante una línea. De lo contrario, se traza una línea hasta el punto x, y desde la posición actual.",
		"sw_mex_ex_08_02": "Moverse, pero no trazar puntos.",
		"sw_mex_ex_08_03": "Moverse, pero volver a la posición original al terminar.",
		"sw_mex_ex_09": "Y estas son mis notas con todos los conjuntos de instrucciones especiales para cada mapa:",
		"Command": "Comando",
		"Moves": "Se mueve",
		"GW-BASIC, Maps, Millimeter paper": "GW-BASIC, Mapas, Papel milimétrico",
		"sw_par_ov_01": "Actualmente estoy desarrollando en Kotlin, Jetpack Compose y Android Studio una nueva app Android con nombre clave <em>&ldquo;Paracaídas&rdquo;</em>, para llevar un registro de eventos flotantes y estadísticas de ocurrencias.",
		"sw_par_mt_01": "images/sw-par-screen-01-sp.jpg",
		"images/sw-par-screen-01.jpg": "images/sw-par-screen-01-sp.jpg",
		"50%": "50%",
		"sw_par_ex_01": "?",
		"Parachute": "Paracaídas",
		"sw_rol_ov_01": "Actualmente estoy desarrollando en Kotlin, Jetpack Compose y Android Studio una nueva app Android con nombre clave <em>&ldquo;Montaña Rusa&rdquo;</em>, para llevar un control del presupuesto personal mediante una combinación de vista mensual de calendario y una gráfica de flujo de efectivo.",
		"sw_rol_mt_01": "images/sw-rol-screen-01-sp.jpg",
		"images/sw-rol-screen-01.jpg": "images/sw-rol-screen-01-sp.jpg",
		"sw_rol_ex_01": "?",
		"Roller Coaster": "Montaña Rusa",
		"sw_jkd_ov_01": "Desarrollé esta página web en JavaScript, HTML y CSS.",
		"sw_jkd_mt_01": "Con este sitio web quiero ir más allá de los límites de un currículum para mostrar los proyectos que han tenido un significado especial en mi labor de Ingeniero de Software.",
		"sw_jkd_ex_01": "Utilicé Bootstrap para implementar la barra lateral del menú. JavaScript para los efectos de texto dinámico. JQuery-Lang-js para implementar la capacidad multilenguaje del sitio. Highlight.js para dar formato a los listados de código fuente.",
		"sw_jkd_ex_02": "Aproveché las animaciones de Keynote y utilicé GIF Toaster para crear los GIF's de El Apartamento. OmniGraffle para actualizar algunos diagramas de DPF. Pixelmator y Paintbrush for Mac para efectuar múltiples ediciones y cambios en Mapas de México. Craft y Tot para edición de texto y repositorios de ideas en general.",
		"sw_jkd_ex_03": "Implementé la opción que me brinda Hostinger.com para liberar cambios al sitio web a través de notificaciones de actualización en GitHub. Así, puedo hacer alguna corrección o implementar alguna idea nueva desde cualquier dispositivo iPhone o iPad utilizando Textastic y Working Copy, liberar los cambios a GitHub y verlos reflejados casi de inmediato en mi sitio.",
		"ta_01": "Este es un fotograma de la película clásica de 1960 <em>&ldquo;El Apartamento&rdquo;</em>.<br> <br>Jack Lemmon interpreta a CC Baxter, un empleado de una gran compañía de seguros en Nueva York, y aquí puedes ver su oficina: oficinistas colocados en escritorios casi hasta donde alcanza la vista.",
		"ta_02": "Cada escritorio tiene un teléfono, un rolodex, una máquina de escribir y una gran máquina calculadora electromecánica.<br> <br>En algunas de las otras tomas se puede ver al fabricante: <em>&ldquo;Friden&rdquo;</em>.",
		"ta_03": "En efecto, cada persona en ese piso es una celda en una hoja de cálculo.",
		"ta_04": "El piso es una hoja de cálculo",
		"ta_05": "y el edificio es un archivo de Excel, con miles de celdas, cada una con una sola persona.",
		"ta_06": "CC Baxter está en el piso 19, sección W, escritorio 861.<br> <br>Los enlaces entre las celdas se componen de una máquina de escribir, copias al carbón (<em>&ldquo;CC&rdquo;</em>) y un sistema de correo interno, y se necesitan días para actualizar cada vez que alguien en el piso superior presiona F9.",
		"ta_07": "(Shirley MacLaine interpreta a una elevadorista, por lo que este es en realidad un romance entre un botón y una celda de hoja de cálculo.)",
		"ta_08": "Cuando la gente habla de productividad, sobre PowerPoint y Excel y de cómo Google Docs y la nube los matarán o no, o de la mensajería y la nube, o de cómo se necesita una computadora de escritorio para el <em>&ldquo;trabajo real&rdquo;</em>, me acuerdo de CC Baxter y de su máquina calculadora Friden.",
		"ta_09": "Lo que mató a esas máquinas no fueron competidores mejores y más baratos, sino una forma completamente diferente de abordar la misma necesidad empresarial subyacente. En lugar de que cientos de personas volvieran a calcular las tarifas de los seguros, la empresa compró una computadora central. Se seguía satisfaciendo la necesidad empresarial, pero el mecanismo cambió por completo y las herramientas antiguas desaparecieron.",
		"ta_10": "Esta historia nos hace conscientes de que lo que estamos haciendo hoy no será lo mismo dentro de dos años. Tenemos que estar permanentemente abiertos al cambio, la única constante será el cambio. Y es muy importante que seamos rápidos, no solo porque queremos obtener resultados más rápido, sino porque si tardamos tres años en hacer algo, la tecnología ya habrá cambiado dos veces. Si no somos ágiles y trabajamos diferente, todo lo que hagamos tendrá ya dos años de retraso."
	}
}
